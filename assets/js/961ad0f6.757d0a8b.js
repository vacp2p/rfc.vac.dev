"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[3959],{23768:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"STATUS-WAKU2-USAGE",name:"Status Waku2 Usage",status:"raw",category:"Best Current Practice",description:"Defines how the Status application uses the Waku protocols.",editor:"Aaryamann Challani &lt;p1ge0nh8er@proton.me&gt;",contributors:["Jimmy Debe &lt;jimmy@status.im&gt;"]},l=void 0,o={unversionedId:"raw/status-waku-usage",id:"raw/status-waku-usage",title:"STATUS-WAKU2-USAGE",description:"Defines how the Status application uses the Waku protocols.",source:"@site/status/raw/status-waku-usage.md",sourceDirName:"raw",slug:"/raw/status-waku-usage",permalink:"/status/raw/status-waku-usage",draft:!1,tags:[],version:"current",frontMatter:{title:"STATUS-WAKU2-USAGE",name:"Status Waku2 Usage",status:"raw",category:"Best Current Practice",description:"Defines how the Status application uses the Waku protocols.",editor:"Aaryamann Challani &lt;p1ge0nh8er@proton.me&gt;",contributors:["Jimmy Debe &lt;jimmy@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"STATUS-MVDS-USAGE",permalink:"/status/raw/status-mvds"},next:{title:"STATUS-URL-DATA",permalink:"/status/raw/url-data"}},s={},p=[{value:"Abstract",id:"abstract",level:2},{value:"Background",id:"background",level:2},{value:"Terminology",id:"terminology",level:2},{value:"Waku Node",id:"waku-node",level:3},{value:"Light Client",id:"light-client",level:3},{value:"Protocol Usage",id:"protocol-usage",level:2},{value:"1. <code>RELAY</code>",id:"1-relay",level:3},{value:"2. <code>STORE</code>",id:"2-store",level:3},{value:"3. <code>FILTER</code>",id:"3-filter",level:3},{value:"Content filtering protocol identifers",id:"content-filtering-protocol-identifers",level:4},{value:"4. <code>LIGHTPUSH</code>",id:"4-lightpush",level:3},{value:"5. Discovery",id:"5-discovery",level:3},{value:"Security/Privacy Considerations",id:"securityprivacy-considerations",level:2},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Status: raw"),(0,r.kt)("li",{parentName:"ul"},"Category: Best Current Practice"),(0,r.kt)("li",{parentName:"ul"},"Editor: Aaryamann Challani ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:p1ge0nh8er@proton.me"},"p1ge0nh8er@proton.me"),">"),(0,r.kt)("li",{parentName:"ul"},"Contributors:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Jimmy Debe ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:jimmy@status.im"},"jimmy@status.im"),">")))),(0,r.kt)("h2",{id:"abstract"},"Abstract"),(0,r.kt)("p",null,"Status is a chat application which has several features,\nincluding, but not limited to -"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Private 1:1 chats, described by ",(0,r.kt)("a",{parentName:"li",href:"/spec/55"},"55/STATUS-1TO1-CHAT")),(0,r.kt)("li",{parentName:"ul"},"Large scale group chats, described by ",(0,r.kt)("a",{parentName:"li",href:"/spec/56"},"56/STATUS-COMMUNITIES"))),(0,r.kt)("p",null,"This specification describes how a Status implementation will make use of\nthe underlying infrastructure, Waku,\nwhich is described in ",(0,r.kt)("a",{parentName:"p",href:"/spec/10"},"10/WAKU2"),"."),(0,r.kt)("h2",{id:"background"},"Background"),(0,r.kt)("p",null,"The Status application aspires to achieve censorship resistance and\nincorporates specific privacy features,\nleveraging the comprehensive set of protocols offered by Waku to enhance these attributes.\nWaku protocols provide secure communication capabilities over decentralized networks.\nOnce integrated, an application will benefit from privacy-preserving,\ncensorship resistance and spam protected communcation."),(0,r.kt)("p",null,"Since Status uses a large set of Waku protocols,\nit is imperative to describe how each are used."),(0,r.kt)("h2",{id:"terminology"},"Terminology"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"RELAY")),(0,r.kt)("td",{parentName:"tr",align:null},"This refers to the Waku Relay protocol, described in ",(0,r.kt)("a",{parentName:"td",href:"/spec/11"},"11/WAKU2-RELAY"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"FILTER")),(0,r.kt)("td",{parentName:"tr",align:null},"This refers to the Waku Filter protocol, described in ",(0,r.kt)("a",{parentName:"td",href:"/spec/12"},"12/WAKU2-FILTER"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"STORE")),(0,r.kt)("td",{parentName:"tr",align:null},"This refers to the Waku Store protocol, described in ",(0,r.kt)("a",{parentName:"td",href:"/spec/13"},"13/WAKU2-STORE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"MESSAGE")),(0,r.kt)("td",{parentName:"tr",align:null},"This refers to the Waku Message format, described in ",(0,r.kt)("a",{parentName:"td",href:"/spec/14"},"14/WAKU2-MESSAGE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LIGHTPUSH")),(0,r.kt)("td",{parentName:"tr",align:null},"This refers to the Waku Lightpush protocol, described in ",(0,r.kt)("a",{parentName:"td",href:"/spec/19"},"19/WAKU2-LIGHTPUSH"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Discovery"),(0,r.kt)("td",{parentName:"tr",align:null},"This refers to a peer discovery method used by a Waku node.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Pubsub Topic")," / ",(0,r.kt)("inlineCode",{parentName:"td"},"Content Topic")),(0,r.kt)("td",{parentName:"tr",align:null},"This refers to the routing of messages within the Waku network, described in ",(0,r.kt)("a",{parentName:"td",href:"/spec/23/"},"23/WAKU2-TOPICS"))))),(0,r.kt)("h3",{id:"waku-node"},"Waku Node"),(0,r.kt)("p",null,"Software that is configured with a set of Waku protocols.\nA Status client comprises of a Waku node that is a ",(0,r.kt)("inlineCode",{parentName:"p"},"RELAY")," node or a non-relay node."),(0,r.kt)("h3",{id:"light-client"},"Light Client"),(0,r.kt)("p",null,"A Status client that operates within resource constrained environments\nis a node configured as light client.\nLight clients do not run a ",(0,r.kt)("inlineCode",{parentName:"p"},"RELAY"),".\nInstead, Status light clients,\ncan request services from other ",(0,r.kt)("inlineCode",{parentName:"p"},"RELAY")," node that provide ",(0,r.kt)("inlineCode",{parentName:"p"},"LIGHTPUSH")," service."),(0,r.kt)("h2",{id:"protocol-usage"},"Protocol Usage"),(0,r.kt)("p",null,"The key words \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d, \u201cSHOULD\u201d,\n\u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cNOT RECOMMENDED\u201d, \u201cMAY\u201d, and\n\u201cOPTIONAL\u201d in this document are to be interpreted as described in ",(0,r.kt)("a",{parentName:"p",href:"https://www.ietf.org/rfc/rfc2119.txt"},"RFC 2119"),"."),(0,r.kt)("p",null,"The following is a list of Waku Protocols used by a Status application."),(0,r.kt)("h3",{id:"1-relay"},"1. ",(0,r.kt)("inlineCode",{parentName:"h3"},"RELAY")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"RELAY")," MUST NOT be used by Status light clients.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"RELAY")," is used to broadcast messages between Status clients.\nAll Status messages are transformed into ",(0,r.kt)("a",{parentName:"p",href:"/spec/14"},"14/WAKU2-MESSAGE"),",\nwhich are sent over the wire."),(0,r.kt)("p",null,"All Status message types are described in ",(0,r.kt)("a",{parentName:"p",href:"/spec/62"},"62/STATUS-PAYLOAD"),".\nStatus Clients MUST transform the following object into a ",(0,r.kt)("inlineCode",{parentName:"p"},"MESSAGE"),"\nas described below -"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"\ntype StatusMessage struct {\n    SymKey[]     []byte // [optional] The symmetric key used to encrypt the message\n    PublicKey    []byte // [optional] The public key to use for asymmetric encryption\n    Sig          string // [optional] The private key used to sign the message\n    PubsubTopic  string // The Pubsub topic to publish the message to     \n    ContentTopic string // The Content topic to publish the message to\n    Payload      []byte // A serialized representation of a Status message to be sent\n    Padding      []byte // Padding that must be applied to the Payload\n    TargetPeer   string // [optional] The target recipient of the message\n    Ephemeral    bool   // If the message is not to be stored, this is set to `true` \n}\n\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"A user MUST only provide either a Symmetric key OR\nan Asymmetric keypair to encrypt the message.\nIf both are received, the implementation MUST throw an error."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"WakuMessage.Payload")," MUST be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"StatusMessage.Payload")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"WakuMessage.Key")," MUST be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"StatusMessage.SymKey")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"WakuMessage.Version")," MUST be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"1")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"WakuMessage.Ephemeral")," MUST be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"StatusMessage.Ephemeral")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"WakuMessage.ContentTopic")," MUST be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"StatusMessage.ContentTopic")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"WakuMessage.Timestamp")," MUST be set to the current Unix epoch timestamp\n(in nanosecond precision)")),(0,r.kt)("h3",{id:"2-store"},"2. ",(0,r.kt)("inlineCode",{parentName:"h3"},"STORE")),(0,r.kt)("p",null,"This protocol MUST remain optional according to the user's preferences,\nit MAY be enabled on Light clients as well."),(0,r.kt)("p",null,"Messages received via ",(0,r.kt)("a",{parentName:"p",href:"/spec/11"},"11/WAKU2-RELAY"),", are stored in a database.\nWhen Waku node running this protocol is service node,\nit MUST provide the complete list of network messages.\nStatus clients SHOULD request historical messages from this service node."),(0,r.kt)("p",null,"The messages that have the ",(0,r.kt)("inlineCode",{parentName:"p"},"WakuMessage.Ephemeral")," flag set to true will not be stored."),(0,r.kt)("p",null,"The Status client MAY provide a method to prune the database of\nolder records to save storage."),(0,r.kt)("h3",{id:"3-filter"},"3. ",(0,r.kt)("inlineCode",{parentName:"h3"},"FILTER")),(0,r.kt)("p",null,"This protocol SHOULD be enabled on Light clients."),(0,r.kt)("p",null,"This protocol SHOULD be used to filter messages based on a given criteria,\nsuch as the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content Topic")," of a ",(0,r.kt)("inlineCode",{parentName:"p"},"MESSAGE"),".\nThis allows a reduction in bandwidth consumption by the Status client."),(0,r.kt)("h4",{id:"content-filtering-protocol-identifers"},"Content filtering protocol identifers"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"filter-subcribe")," SHOULD be implemented on ",(0,r.kt)("inlineCode",{parentName:"p"},"RELAY")," nodes\nto provide ",(0,r.kt)("inlineCode",{parentName:"p"},"FILTER")," services."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"filter-subscribe"),":"),(0,r.kt)("p",null,">"," /vac/waku/filter-subscribe/2.0.0-beta1"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"filter-push")," SHOULD be implemented on light clients to receive messages."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"filter-push"),":"),(0,r.kt)("p",null,">"," /vac/waku/filter-push/2.0.0-beta1"),(0,r.kt)("p",null,"Status clients SHOULD apply a filter for all the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content Topic"),"\nthey are interested in, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"Content Topic")," derived from -"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"1:1 chats with other users, described in ",(0,r.kt)("a",{parentName:"li",href:"/spec/55"},"55/STATUS-1TO1-CHAT")),(0,r.kt)("li",{parentName:"ol"},"Group chats"),(0,r.kt)("li",{parentName:"ol"},"Community Channels, described in ",(0,r.kt)("a",{parentName:"li",href:"/spec/56"},"56/STATUS-COMMUNITIES"))),(0,r.kt)("h3",{id:"4-lightpush"},"4. ",(0,r.kt)("inlineCode",{parentName:"h3"},"LIGHTPUSH")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"LIGHTPUSH")," protocol MUST be enabled on Status light clients.\nA Status ",(0,r.kt)("inlineCode",{parentName:"p"},"RELAY")," node MAY implement ",(0,r.kt)("inlineCode",{parentName:"p"},"LIGHTPUSH")," to support light clients.\nPeers will be able to publish messages,\nwithout running a full-fledged ",(0,r.kt)("a",{parentName:"p",href:"/spec/11"},"11/WAKU2-RELAY")," protocol."),(0,r.kt)("p",null,"When a Status client is publishing a message,\nit MUST check if Light mode is enabled,\nand if so, it MUST publish the message via this protocol."),(0,r.kt)("h3",{id:"5-discovery"},"5. Discovery"),(0,r.kt)("p",null,"A discovery method MUST be supported by Light clients and Full clients"),(0,r.kt)("p",null,"Status clients SHOULD make use of the following peer discovery methods\nthat are provided by Waku, such as -"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-1459"},"EIP-1459: DNS-Based Discovery")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/33"},"33/WAKU2-DISCV5"),": A node discovery protocol to\ncreate decentralized network of interconnected Waku nodes."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/34"},"34/WAKU2-PEER-EXCHANGE"),":\nA peer discovery protocol for resource restricted devices.")),(0,r.kt)("p",null,"Status clients MAY use any combination of the above peer discovery methods,\nwhich is suited best for their implementation."),(0,r.kt)("h2",{id:"securityprivacy-considerations"},"Security/Privacy Considerations"),(0,r.kt)("p",null,"This specification inherits the security and\nprivacy considerations from the following specifications -"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/10"},"10/WAKU2")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/11"},"11/WAKU2-RELAY")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/12"},"12/WAKU2-FILTER")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/13"},"13/WAKU2-STORE")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/14"},"14/WAKU2-MESSAGE")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/23"},"23/WAKU2-TOPICS")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/19"},"19/WAKU2-LIGHTPUSH")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/55"},"55/STATUS-1TO1-CHAT")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/56"},"56/STATUS-COMMUNITIES")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/62"},"62/STATUS-PAYLOAD")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-1459"},"EIP-1459: DNS-Based Discovery")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/33"},"33/WAKU2-DISCV5")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/34"},"34/WAKU2-PEER-EXCHANGE"))),(0,r.kt)("h2",{id:"copyright"},"Copyright"),(0,r.kt)("p",null,"Copyright and related rights waived via ",(0,r.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/55"},"55/STATUS-1TO1-CHAT")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/56"},"56/STATUS-COMMUNITIES")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/10"},"10/WAKU2")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/11"},"11/WAKU2-RELAY")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/12"},"12/WAKU2-FILTER")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/13"},"13/WAKU2-STORE")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/14"},"14/WAKU2-MESSAGE")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/23"},"23/WAKU2-TOPICS")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/19"},"19/WAKU2-LIGHTPUSH")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/64"},"64/WAKU2-NETWORK")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/62"},"62/STATUS-PAYLOAD")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-1459"},"EIP-1459: DNS-Based Discovery")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/33"},"33/WAKU2-DISCV5")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"/spec/34"},"34/WAKU2-PEER-EXCHANGE"))))}u.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return a?n.createElement(k,l(l({ref:t},c),{},{components:a})):n.createElement(k,l({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);