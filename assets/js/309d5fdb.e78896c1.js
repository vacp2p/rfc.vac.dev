"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[1811],{11583:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const r={title:"Dapp browser API usage",name:"Dapp browser API usage",status:"deprecated",description:"This document describes requirements that an application must fulfill in order to provide a proper environment for Dapps running inside a browser.",editor:"Filip Dimitrijevic &lt;filip@status.im&gt;",contributors:null},o=void 0,l={unversionedId:"deprecated/dapp-browser-API-usage",id:"deprecated/dapp-browser-API-usage",title:"Dapp browser API usage",description:"This document describes requirements that an application must fulfill in order to provide a proper environment for Dapps running inside a browser.",source:"@site/status/deprecated/dapp-browser-API-usage.md",sourceDirName:"deprecated",slug:"/deprecated/dapp-browser-API-usage",permalink:"/status/deprecated/dapp-browser-API-usage",draft:!1,tags:[],version:"current",frontMatter:{title:"Dapp browser API usage",name:"Dapp browser API usage",status:"deprecated",description:"This document describes requirements that an application must fulfill in order to provide a proper environment for Dapps running inside a browser.",editor:"Filip Dimitrijevic &lt;filip@status.im&gt;",contributors:null},sidebar:"defaultSidebar",previous:{title:"CLIENT",permalink:"/status/deprecated/client"},next:{title:"EIPS",permalink:"/status/deprecated/eips"}},s={},p=[{value:"Abstract",id:"abstract",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage in Dapps",id:"usage-in-dapps",level:2},{value:"Properties",id:"properties",level:3},{value:"<code>isStatus</code>",id:"isstatus",level:4},{value:"<code>status</code>",id:"status",level:4},{value:"Methods",id:"methods",level:3},{value:"<code>isConnected</code>",id:"isconnected",level:4},{value:"<code>scanQRCode</code>",id:"scanqrcode",level:4},{value:"<code>request</code>",id:"request",level:4},{value:"Unused",id:"unused",level:3},{value:"<code>enable</code> (DEPRECATED)",id:"enable-deprecated",level:4},{value:"<code>send</code> (DEPRECATED)",id:"send-deprecated",level:4},{value:"<code>sendAsync</code> (DEPRECATED)",id:"sendasync-deprecated",level:4},{value:"<code>sendSync</code> (DEPRECATED)",id:"sendsync-deprecated",level:4},{value:"Implementation",id:"implementation",level:2},{value:"Compatibility",id:"compatibility",level:2},{value:"Changelog",id:"changelog",level:2},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],d={toc:p};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Status: deprecated"),(0,i.kt)("li",{parentName:"ul"},"Editor: Filip Dimitrijevic ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:filip@status.im"},"filip@status.im"),">")),(0,i.kt)("h2",{id:"abstract"},"Abstract"),(0,i.kt)("p",null,"This document describes requirements that an application must fulfill in order to provide a proper environment for Dapps running inside a browser.\nA description of the Status Dapp API is provided, along with an overview of bidirectional communication underlying the API implementation.\nThe document also includes a list of EIPs that this API implements."),(0,i.kt)("h2",{id:"definitions"},"Definitions"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Term"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Webview")),(0,i.kt)("td",{parentName:"tr",align:null},"Platform-specific browser core implementation.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Ethereum Provider")),(0,i.kt)("td",{parentName:"tr",align:null},"A JS object (",(0,i.kt)("inlineCode",{parentName:"td"},"window.ethereum"),") injected into each web page opened in the browser providing web3 compatible provider.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Bridge")),(0,i.kt)("td",{parentName:"tr",align:null},"A set of facilities allow bidirectional communication between JS code and the application.")))),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The application should expose an Ethereum Provider object (",(0,i.kt)("inlineCode",{parentName:"p"},"window.ethereum"),") to JS code running inside the browser.\nIt is important to have the ",(0,i.kt)("inlineCode",{parentName:"p"},"window.ethereum")," object available before the page loads, otherwise Dapps might not work correctly."),(0,i.kt)("p",null,"Additionally, the browser component should also provide bidirectional communication between JS code and the application."),(0,i.kt)("h2",{id:"usage-in-dapps"},"Usage in Dapps"),(0,i.kt)("p",null,"Dapps can use the below properties and methods of ",(0,i.kt)("inlineCode",{parentName:"p"},"window.ethereum")," object."),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("h4",{id:"isstatus"},(0,i.kt)("inlineCode",{parentName:"h4"},"isStatus")),(0,i.kt)("p",null,"Returns true. Can be used by the Dapp to find out whether it's running inside Status."),(0,i.kt)("h4",{id:"status"},(0,i.kt)("inlineCode",{parentName:"h4"},"status")),(0,i.kt)("p",null,"Returns a ",(0,i.kt)("inlineCode",{parentName:"p"},"StatusAPI")," object. For now it supports one method: ",(0,i.kt)("inlineCode",{parentName:"p"},"getContactCode")," that sends a ",(0,i.kt)("inlineCode",{parentName:"p"},"contact-code")," request to Status."),(0,i.kt)("h3",{id:"methods"},"Methods"),(0,i.kt)("h4",{id:"isconnected"},(0,i.kt)("inlineCode",{parentName:"h4"},"isConnected")),(0,i.kt)("p",null,"Similarly to Ethereum JS API ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ethereum/wiki/wiki/JavaScript-API#web3isconnected"},"docs"),",\nit should be called to check if connection to a node exists. On Status, this fn always returns true, as once Status is up and running, node is automatically started."),(0,i.kt)("h4",{id:"scanqrcode"},(0,i.kt)("inlineCode",{parentName:"h4"},"scanQRCode")),(0,i.kt)("p",null,"Sends a ",(0,i.kt)("inlineCode",{parentName:"p"},"qr-code")," Status API request."),(0,i.kt)("h4",{id:"request"},(0,i.kt)("inlineCode",{parentName:"h4"},"request")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"request")," method as defined by EIP-1193."),(0,i.kt)("h3",{id:"unused"},"Unused"),(0,i.kt)("p",null,"Below are some legacy methods that some Dapps might still use."),(0,i.kt)("h4",{id:"enable-deprecated"},(0,i.kt)("inlineCode",{parentName:"h4"},"enable")," (DEPRECATED)"),(0,i.kt)("p",null,"Sends a ",(0,i.kt)("inlineCode",{parentName:"p"},"web3")," Status API request. It returns a first entry in the list of available accounts."),(0,i.kt)("p",null,"Legacy ",(0,i.kt)("inlineCode",{parentName:"p"},"enable")," method as defined by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md"},"EIP1102"),"."),(0,i.kt)("h4",{id:"send-deprecated"},(0,i.kt)("inlineCode",{parentName:"h4"},"send")," (DEPRECATED)"),(0,i.kt)("p",null,"Legacy ",(0,i.kt)("inlineCode",{parentName:"p"},"send")," method as defined by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md"},"EIP1193"),"."),(0,i.kt)("h4",{id:"sendasync-deprecated"},(0,i.kt)("inlineCode",{parentName:"h4"},"sendAsync")," (DEPRECATED)"),(0,i.kt)("p",null,"Legacy ",(0,i.kt)("inlineCode",{parentName:"p"},"sendAsync")," method as defined by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md"},"EIP1193"),"."),(0,i.kt)("h4",{id:"sendsync-deprecated"},(0,i.kt)("inlineCode",{parentName:"h4"},"sendSync")," (DEPRECATED)"),(0,i.kt)("p",null,"Legacy ",(0,i.kt)("inlineCode",{parentName:"p"},"send")," method."),(0,i.kt)("h2",{id:"implementation"},"Implementation"),(0,i.kt)("p",null,"Status uses a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/status-im/react-native-webview"},"forked version")," of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/react-native-community/react-native-webview"},"react-native-webview"),"  to display web or dapps content.\nThe fork provides an Android implementation of JS injection before page load.\nIt is required in order to properly inject Ethereum Provider object."),(0,i.kt)("p",null,"Status injects two JS scripts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-mobile/blob/develop/resources/js/provider.js"},"provider.js"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"window.ethereum")," object"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-mobile/blob/develop/resources/js/webview.js"},"webview.js"),": override for ",(0,i.kt)("inlineCode",{parentName:"li"},"history.pushState")," used internally")),(0,i.kt)("p",null,"Dapps running inside a browser communicate with Status Ethereum node by means of a ",(0,i.kt)("em",{parentName:"p"},"bridge")," provided by react-native-webview library.\nThe bridge allows for bidirectional communication between browser and Status. In order to do so, it injects a special ",(0,i.kt)("inlineCode",{parentName:"p"},"ReactNativeWebview")," object into each page it loads."),(0,i.kt)("p",null,"On Status (React Native) end, ",(0,i.kt)("inlineCode",{parentName:"p"},"react-native-webview")," library provides ",(0,i.kt)("inlineCode",{parentName:"p"},"WebView.injectJavascript")," function\non a webview component that allows to execute arbitrary code inside the webview.\nThus it is possible to inject a function call passing Status node response back to the Dapp."),(0,i.kt)("p",null,"Below is the table briefly describing what functions/properties are used. More details available in package ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/react-native-community/react-native-webview/blob/master/docs/Guide.md#communicating-between-js-and-native"},"docs"),"."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Direction"),(0,i.kt)("th",{parentName:"tr",align:null},"Side"),(0,i.kt)("th",{parentName:"tr",align:null},"Method"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Browser-",">","Status"),(0,i.kt)("td",{parentName:"tr",align:null},"JS"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ReactNativeWebView.postMessage()"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Browser-",">","Status"),(0,i.kt)("td",{parentName:"tr",align:null},"RN"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WebView.onMessage()"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Status-",">","Browser"),(0,i.kt)("td",{parentName:"tr",align:null},"JS"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ReactNativeWebView.onMessage()"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Status-",">","Browser"),(0,i.kt)("td",{parentName:"tr",align:null},"RN"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"WebView.injectJavascript()"))))),(0,i.kt)("h2",{id:"compatibility"},"Compatibility"),(0,i.kt)("p",null,"Status browser supports the following EIPs:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md"},"EIP1102"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"eth_requestAccounts")," support"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md"},"EIP1193"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"connect"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"disconnect"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"chainChanged"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"accountsChanged")," event support is not implemented")),(0,i.kt)("h2",{id:"changelog"},"Changelog"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Version"),(0,i.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"0.1.0"),(0,i.kt)("td",{parentName:"tr",align:null},"Initial Release")))),(0,i.kt)("h2",{id:"copyright"},"Copyright"),(0,i.kt)("p",null,"Copyright and related rights waived via ",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ethereum/wiki/wiki/JavaScript-API#web3isconnected"},"Ethereum JS API docs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1102.md"},"EIP1102")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md"},"EIP1193")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/status-im/react-native-webview"},"forked version")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/react-native-community/react-native-webview"},"react-native-webview")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-mobile/blob/develop/resources/js/provider.js"},"provider.js")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-mobile/blob/develop/resources/js/webview.js"},"webview.js")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/react-native-community/react-native-webview/blob/master/docs/Guide.md#communicating-between-js-and-native"},"docs"))))}u.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(a),m=i,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return a?n.createElement(h,o(o({ref:t},d),{},{components:a})):n.createElement(h,o({ref:t},d))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"}}]);