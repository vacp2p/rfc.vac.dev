"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[9730],{49809:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=t(87462),r=(t(67294),t(3905));const i={title:"Keycard Usage for Wallet and Chat Keys",name:"Keycard Usage for Wallet and Chat Keys",status:"deprecated",description:"In this specification, we describe how Status communicates with Keycard to create, store and use multiaccount.",editor:"Filip Dimitrijevic &lt;filip@status.im&gt;",contributors:["Roman Volosovskyi &lt;roman@status.im&gt;"]},c=void 0,l={unversionedId:"deprecated/keycard-usage-for-wallet-and-chat-keys",id:"deprecated/keycard-usage-for-wallet-and-chat-keys",title:"Keycard Usage for Wallet and Chat Keys",description:"In this specification, we describe how Status communicates with Keycard to create, store and use multiaccount.",source:"@site/status/deprecated/keycard-usage-for-wallet-and-chat-keys.md",sourceDirName:"deprecated",slug:"/deprecated/keycard-usage-for-wallet-and-chat-keys",permalink:"/status/deprecated/keycard-usage-for-wallet-and-chat-keys",draft:!1,tags:[],version:"current",frontMatter:{title:"Keycard Usage for Wallet and Chat Keys",name:"Keycard Usage for Wallet and Chat Keys",status:"deprecated",description:"In this specification, we describe how Status communicates with Keycard to create, store and use multiaccount.",editor:"Filip Dimitrijevic &lt;filip@status.im&gt;",contributors:["Roman Volosovskyi &lt;roman@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"GROUP-CHAT",permalink:"/status/deprecated/group-chat"},next:{title:"NOTIFICATIONS",permalink:"/status/deprecated/notifications"}},d={},s=[{value:"Abstract",id:"abstract",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Multiaccount creation/restoring",id:"multiaccount-creationrestoring",level:2},{value:"Creation and restoring via mnemonic",id:"creation-and-restoring-via-mnemonic",level:3},{value:"Multiaccount restoring via pairing",id:"multiaccount-restoring-via-pairing",level:3},{value:"Multiaccount unlocking",id:"multiaccount-unlocking",level:2},{value:"Transaction signing",id:"transaction-signing",level:2},{value:"Account derivation",id:"account-derivation",level:2},{value:"Reset pin",id:"reset-pin",level:2},{value:"Unblock pin",id:"unblock-pin",level:2},{value:"Status go calls",id:"status-go-calls",level:2},{value:"Where are the keys stored?",id:"where-are-the-keys-stored",level:2},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],p={toc:s};function o(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Status: deprecated"),(0,r.kt)("li",{parentName:"ul"},"Editor: Filip Dimitrijevic ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:filip@status.im"},"filip@status.im"),">"),(0,r.kt)("li",{parentName:"ul"},"Contributors:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Roman Volosovskyi ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:roman@status.im"},"roman@status.im"),">")))),(0,r.kt)("h2",{id:"abstract"},"Abstract"),(0,r.kt)("p",null,"In this specification, we describe how Status communicates with Keycard to create, store and use multiaccount."),(0,r.kt)("h2",{id:"definitions"},"Definitions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Term"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Keycard Hardwallet"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://keycard.tech/docs/"},"https://keycard.tech/docs/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"multiaccount-creationrestoring"},"Multiaccount creation/restoring"),(0,r.kt)("h3",{id:"creation-and-restoring-via-mnemonic"},"Creation and restoring via mnemonic"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/get-application-info"),"\nrequest: ",(0,r.kt)("inlineCode",{parentName:"p"},"nil"),"\nresponse: ",(0,r.kt)("inlineCode",{parentName:"p"},'{"initialized?" false}'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/init-card"),"\nrequest: ",(0,r.kt)("inlineCode",{parentName:"p"},"{:pin 123123}"),"\nresponse:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"password" "nEJXqf6VWbqeC5oN", \n "puk" "411810112887", \n "pin" "123123"}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/get-application-info"),"\nrequest: ",(0,r.kt)("inlineCode",{parentName:"p"},"nil"),"\nresponse:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"free-pairing-slots" 5, \n "app-version" "2.2", \n "secure-channel-pub-key" "04e70d7af7d91b8cd23adbefdfc242c096adee6c1b5ad27a4013a8f926864c1a4f816b338238dc4a04226ab42f23672585c6dca03627885530643f1656ee69b025", \n "key-uid" "", \n "instance-uid" "9f149d438988a7af5e1a186f650c9328", \n "paired?" false, \n "has-master-key?" false, \n "initialized?" true}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/pair"),"\nparams: ",(0,r.kt)("inlineCode",{parentName:"p"},'{:password "nEJXqf6VWbqeC5oN"}'),"\nresponse: ",(0,r.kt)("inlineCode",{parentName:"p"},"AAVefVX0kPGsxnvQV5OXRbRTLGI3k8/S27rpsq/lZrVR")," (",(0,r.kt)("inlineCode",{parentName:"p"},"pairing"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/generate-and-load-keys")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'   {:mnemonic "lift mansion moment version card type uncle sunny lock gather nerve math", \n    :pairing "AAVefVX0kPGsxnvQV5OXRbRTLGI3k8/S27rpsq/lZrVR", \n    :pin "123123"}\n')),(0,r.kt)("p",{parentName:"li"},"   response:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"whisper-address" "1f29a1a60c8a12f80c397a91c6ae0323f420e609", \n "whisper-private-key" "123123123123123", \n "wallet-root-public-key" "04eb9d01990a106a65a6dfaa48300f72aecfeabe502d9f4f7aeaccb146dc2f16e2dec81dcec0a1a52c1df4450f441a48c210e1a73777c0161030378df22e4ae015", \n "encryption-public-key" "045ee42f012d72be74b31a28ce320df617e0cd5b9b343fad34fcd61e2f5dfa89ab23d880473ba4e95401a191764c7f872b7af92ea0d8c39462147df6f3f05c2a11", \n "wallet-root-address" "132dd67ff47cc1c376879c474fd2afd0f1eee6de", \n "whisper-public-key" "0450ad84bb95f32c64f4e5027cc11d1b363a0566a0cfc475c5653e8af9964c5c9b0661129b75e6e1bc6e96ba2443238e53e7f49f2c5f2d16fcf04aca4826765d46", \n "address" "bf93eb43fea2ce94bf3a6463c16680b56aa4a08a", \n "wallet-address" "7eee1060d8e4722d36c99f30ff8291caa3cfc40c", \n "key-uid" "472d8436ccedb64bcbd897bed5895ec3458b306352e1bcee377df87db32ef2c2", \n "wallet-public-key" "0495ab02978ea1f8b059140e0be5a87aad9b64bb7d9706735c47dda6e182fd5ca41744ca37583b9a10c316b01d4321d6c85760c61301874089acab041037246294", \n "public-key" "0465d452d12171711f32bb931f9ea26fe1b88fe2511a7909a042b914fde10a99719136365d506e2d1694fc14627f9d557da33865efc6001da3942fc1d4d2469ca1", \n "instance-uid" "9f149d438988a7af5e1a186f650c9328"}\n')))),(0,r.kt)("h3",{id:"multiaccount-restoring-via-pairing"},"Multiaccount restoring via pairing"),(0,r.kt)("p",null,"This flow is required in case if a user want to pair a card with an existing multiaccount on it."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/get-application-info"),"\nrequest: ",(0,r.kt)("inlineCode",{parentName:"p"},"nil"),"\nresponse: "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"free-pairing-slots" 4, \n "app-version" "2.2", \n "secure-channel-pub-key" "04e70d7af7d91b8cd23adbefdfc242c096adee6c1b5ad27a4013a8f926864c1a4f816b338238dc4a04226ab42f23672585c6dca03627885530643f1656ee69b025", \n "key-uid" "", \n "instance-uid" "9f149d438988a7af5e1a186f650c9328", \n "paired?" false, \n "has-master-key?" false, \n "initialized?" true}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/pair"),"\nparams: ",(0,r.kt)("inlineCode",{parentName:"p"},'{:password "nEJXqf6VWbqeC5oN"}'),"\nresponse: ",(0,r.kt)("inlineCode",{parentName:"p"},"AAVefVX0kPGsxnvQV5OXRbRTLGI3k8/S27rpsq/lZrVR")," (",(0,r.kt)("inlineCode",{parentName:"p"},"pairing"),")")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/generate-and-load-keys")," "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:mnemonic "lift mansion moment version card type uncle sunny lock gather nerve math", \n :pairing "AAVefVX0kPGsxnvQV5OXRbRTLGI3k8/S27rpsq/lZrVR", \n :pin "123123"}\n')),(0,r.kt)("p",{parentName:"li"}," response:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"whisper-address" "1f29a1a60c8a12f80c397a91c6ae0323f420e609", \n "whisper-private-key" "123123123123123123123", \n "wallet-root-public-key" "04eb9d01990a106a65a6dfaa48300f72aecfeabe502d9f4f7aeaccb146dc2f16e2dec81dcec0a1a52c1df4450f441a48c210e1a73777c0161030378df22e4ae015", \n "encryption-public-key" "045ee42f012d72be74b31a28ce320df617e0cd5b9b343fad34fcd61e2f5dfa89ab23d880473ba4e95401a191764c7f872b7af92ea0d8c39462147df6f3f05c2a11", \n "wallet-root-address" "132dd67ff47cc1c376879c474fd2afd0f1eee6de", \n "whisper-public-key" "0450ad84bb95f32c64f4e5027cc11d1b363a0566a0cfc475c5653e8af9964c5c9b0661129b75e6e1bc6e96ba2443238e53e7f49f2c5f2d16fcf04aca4826765d46", \n "address" "bf93eb43fea2ce94bf3a6463c16680b56aa4a08a", \n "wallet-address" "7eee1060d8e4722d36c99f30ff8291caa3cfc40c", \n "key-uid" "472d8436ccedb64bcbd897bed5895ec3458b306352e1bcee377df87db32ef2c2", \n "wallet-public-key" "0495ab02978ea1f8b059140e0be5a87aad9b64bb7d9706735c47dda6e182fd5ca41744ca37583b9a10c316b01d4321d6c85760c61301874089acab041037246294", \n "public-key" "0465d452d12171711f32bb931f9ea26fe1b88fe2511a7909a042b914fde10a99719136365d506e2d1694fc14627f9d557da33865efc6001da3942fc1d4d2469ca1", \n "instance-uid" "9f149d438988a7af5e1a186f650c9328"}\n')))),(0,r.kt)("h2",{id:"multiaccount-unlocking"},"Multiaccount unlocking"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/get-application-info"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},"{:pairing nil, :on-success nil}\n")),(0,r.kt)("p",{parentName:"li"}," response:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"free-pairing-slots" 4, \n "app-version" "2.2", \n "secure-channel-pub-key" "04b079ac513d5e0ebbe9becbae1618503419f5cb59edddc7d7bb09ce0db069a8e6dec1fb40c6b8e5454f7e1fcd0bb4a0b9750256afb4e4390e169109f3ea3ba91d", \n "key-uid" "a5424fb033f5cc66dce9cbbe464426b6feff70ca40aa952c56247aaeaf4764a9", \n "instance-uid" "2268254e3ed7898839abe0b40e1b4200", \n "paired?" false, \n "has-master-key?" true, \n "initialized?" true}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/get-keys"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:pairing "ACEWbvUlordYWOE6M1Narn/AXICRltjyuKIAn4kkPXQG",\n :pin "123123"}\n')),(0,r.kt)("p",{parentName:"li"},"response:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"whisper-address" "ec83f7354ca112203d2ce3e0b77b47e6e33258aa", \n "whisper-private-key" "123123123123123123123123",\n "wallet-root-public-key" "0424a93fe62a271ad230eb2957bf221b4644670589f5c0d69bd11f3371034674bf7875495816095006c2c0d5f834d628b87691a8bbe3bcc2225269020febd65a19", \n "encryption-public-key" "0437eef85e669f800570f444e64baa2d0580e61cf60c0e9236b4108455ec1943f385043f759fcb5bd8348e32d6d6550a844cf24e57f68e9397a0f7c824a8caee2d", \n "wallet-root-address" "6ff915f9f31f365511b1b8c1e40ce7f266caa5ce", \n "whisper-public-key" "04b195df4336c596cca1b89555dc55dd6bb4c5c4491f352f6fdfae140a2349213423042023410f73a862aa188f6faa05c80b0344a1e39c253756cb30d8753f9f8324", \n "address" "73509a1bb5f3b74d0dba143705cd9b4b55b8bba1", \n "wallet-address" "2f0cc0e0859e7a05f319d902624649c7e0f48955", \n "key-uid" "a5424fb033f5cc66dce9cbbe464426b6feff70ca40aa952c56247aaeaf4764a9", \n "wallet-public-key" "04d6fab73772933215872c239787b2281f3b10907d099d04b88c861e713bd2b95883e0b1710a266830da29e76bbf6b87ed034ab139e36cc235a1b2a5b5ddfd4e91", \n "public-key" "0437eef85e669f800570f444e64baa2d0580e61cf60c0e9236b4108455ec1943f385043f759fcb5bd8348e32d6d6550a844cf24e57f68e9397a0f7c824a8caee2d", \n "instance-uid" "2268254e3ed7898839abe0b40e1b4200"}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/get-application-info"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:pairing "ACEWbvUlordYWOE6M1Narn/AXICRltjyuKIAn4kkPXQG"}\n')),(0,r.kt)("p",{parentName:"li"},"response:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{"paired?" true, \n "has-master-key?" true, \n "app-version" "2.2", \n "free-pairing-slots" 4, \n "pin-retry-counter" 3, \n "puk-retry-counter" 5, \n "initialized?" true, \n "secure-channel-pub-key" "04b079ac513d5e0ebbe9becbae1618503419f5cb59edddc7d7bb09ce0db069a8e6dec1fb40c6b8e5454f7e1fcd0bb4a0b9750256afb4e4390e169109f3ea3ba91d", \n "key-uid" "a5424fb033f5cc66dce9cbbe464426b6feff70ca40aa952c56247aaeaf4764a9", \n "instance-uid" "2268254e3ed7898839abe0b40e1b4200"}\n')))),(0,r.kt)("h2",{id:"transaction-signing"},"Transaction signing"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/get-application-info")),(0,r.kt)("p",{parentName:"li"},"params:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:pairing "ALecvegKyOW4szknl01yYWx60GLDK5gDhxMgJECRZ+7h", \n :on-success :hardwallet/sign}\n')),(0,r.kt)("p",{parentName:"li"},"response:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},' {"paired?" true, \n  "has-master-key?" true, \n  "app-version" "2.2", \n  "free-pairing-slots" 4, \n  "pin-retry-counter" 3, \n  "puk-retry-counter" 5, \n  "initialized?" true, \n  "secure-channel-pub-key" "0476d11f2ccdad4e7779b95a1ce063d7280cb6c09afe2c0e48ca0c64ab9cf2b3c901d12029d6c266bfbe227c73a802561302b2330ac07a3270fc638ad258fced4a", \n  "key-uid" "d5c8cde8085e7a3fcf95aafbcbd7b3cfe32f61b85c2a8f662f60e76bdc100718", \n  "instance-uid" "e20e27bfee115b431e6e81b8e9dcf04c"}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/sign"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:hash "92fc7ef54c3e0c42de256b93fbf2c49dc6948ee089406e204dec943b7a0142a9", \n :pairing "ALecvegKyOW4szknl01yYWx60GLDK5gDhxMgJECRZ+7h", \n :pin "123123", \n :path "m/44\'/60\'/0\'/0/0"}\n')),(0,r.kt)("p",{parentName:"li"},"response: ",(0,r.kt)("inlineCode",{parentName:"p"},"5d2ca075593cf50aa34007a0a1df7df14a369534450fce4a2ae8d023a9d9c0e216b5e5e3f64f81bee91613318d01601573fdb15c11887a3b8371e3291e894de600")))),(0,r.kt)("h2",{id:"account-derivation"},"Account derivation"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/verify-pin"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:pin "123123", \n :pairing "ALecvegKyOW4szknl01yYWx60GLDK5gDhxMgJECRZ+7h"}\n')),(0,r.kt)("p",{parentName:"li"},"response: ",(0,r.kt)("inlineCode",{parentName:"p"},"3"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/export-key"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:pin "123123", \n :pairing "ALecvegKyOW4szknl01yYWx60GLDK5gDhxMgJECRZ+7h", \n :path "m/44\'/60\'/0\'/0/1"}\n')),(0,r.kt)("p",{parentName:"li"},"response: ",(0,r.kt)("inlineCode",{parentName:"p"},"046d1bcd2310a5e0094bc515b0ec995a8cb59e23d564094443af10011b6c00bdde44d160cdd32b4b6341ddd7dc83a4f31fdf60ec2276455649ccd7a22fa4ea01d8")," (account's ",(0,r.kt)("inlineCode",{parentName:"p"},"public-key"),")"))),(0,r.kt)("h2",{id:"reset-pin"},"Reset pin"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/change-pin"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:new-pin "111111", \n :current-pin "222222", \n :pairing "AA0sKxPkN+jMHXZZeI8Rgz04AaY5Fg0CzVbm9189Khob"}\n')),(0,r.kt)("p",{parentName:"li"},"response:\n",(0,r.kt)("inlineCode",{parentName:"p"},"true")))),(0,r.kt)("h2",{id:"unblock-pin"},"Unblock pin"),(0,r.kt)("p",null,"If user enters a wrong pin three times in a row a card gets blocked. The user can use puk code then to unblock the card and set a new pin."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"status-im.hardwallet.card/unblock-pin"),"\nparams:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-clojure"},'{:puk "120702722103", \n :new-pin "111111", \n :pairing "AIoQl0OtCL0/uSN7Ct1/FHRMEk/eM2Lrhn0bw7f8sgOe"}\n')),(0,r.kt)("p",{parentName:"li"},"response\n",(0,r.kt)("inlineCode",{parentName:"p"},"true")))),(0,r.kt)("h2",{id:"status-go-calls"},"Status go calls"),(0,r.kt)("p",null,"In order to use the card in the app we need to use some parts of status-go API, specifically:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-go/blob/b33ad8147d23a932064f241e575511d70a601dcc/mobile/status.go#L337"},(0,r.kt)("inlineCode",{parentName:"a"},"SaveAccountAndLoginWithKeycard"))," after multiaccount creation/restoring to store multiaccount and login into it"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-go/blob/b33ad8147d23a932064f241e575511d70a601dcc/mobile/status.go#L373"},(0,r.kt)("inlineCode",{parentName:"a"},"LoginWithKeycard"))," to log into already existing account"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-go/blob/b33ad8147d23a932064f241e575511d70a601dcc/mobile/status.go#L492"},(0,r.kt)("inlineCode",{parentName:"a"},"HashTransaction"))," and ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-go/blob/b33ad8147d23a932064f241e575511d70a601dcc/mobile/status.go#L520"},(0,r.kt)("inlineCode",{parentName:"a"},"HashMessage"))," for hashing transaction/message before signing"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-go/blob/b33ad8147d23a932064f241e575511d70a601dcc/mobile/status.go#L471"},(0,r.kt)("inlineCode",{parentName:"a"},"SendTransactionWithSignature"))," to send transaction")),(0,r.kt)("h2",{id:"where-are-the-keys-stored"},"Where are the keys stored?"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"When we create a regular multiaccount all its keys are stored on device and are encrypted via key which is derived from user's password. In case if account was created using keycard all keys are stored on the card and are retrieved from it during signing into multiaccount."),(0,r.kt)("li",{parentName:"ol"},"When we create a regular multiaccount we also create a separate database for it and this database is encrypted using key which is derived from user's password. For a keycard account we use ",(0,r.kt)("inlineCode",{parentName:"li"},"encryption-public-key")," (returned by ",(0,r.kt)("inlineCode",{parentName:"li"},"status-im.hardwallet.card/get-keys"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"status-im.hardwallet.card/generate-and-load-keys"),") as a password.")),(0,r.kt)("h2",{id:"copyright"},"Copyright"),(0,r.kt)("p",null,"Copyright and related rights waived via ",(0,r.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://keycard.tech/docs/"},"Keycard Hardwallet Documentation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/status-im/status-go/blob/b33ad8147d23a932064f241e575511d70a601dcc/mobile/status.go"},"Keycard Codebase"))))}o.isMDXComponent=!0},3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>u});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=n.createContext({}),s=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},p=function(e){var a=s(e.components);return n.createElement(d.Provider,{value:a},e.children)},o={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},f=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=s(t),u=r,m=f["".concat(d,".").concat(u)]||f[u]||o[u]||i;return t?n.createElement(m,c(c({ref:a},p),{},{components:t})):n.createElement(m,c({ref:a},p))}));function u(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=f;var l={};for(var d in a)hasOwnProperty.call(a,d)&&(l[d]=a[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<i;s++)c[s]=t[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);