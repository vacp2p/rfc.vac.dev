"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[4299],{96150:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"WAKU-MAILSERVER",name:"Waku Mailserver",status:"deprecated",description:"Waku Mailserver is a specification that allows messages to be stored permanently and to allow the stored messages to be delivered to requesting client nodes, regardless if the messages are not available in the network due to the message TTL expiring.",editor:"Filip Dimitrijevic &lt;filip@status.im&gt;",contributors:["Adam Babik &lt;adam@status.im&gt;","Oskar Thor\xe9n &lt;oskar@status.im&gt;","Samuel Hawksby-Robinson &lt;samuel@status.im&gt;"]},s=void 0,o={unversionedId:"deprecated/waku-mailserver",id:"deprecated/waku-mailserver",title:"WAKU-MAILSERVER",description:"Waku Mailserver is a specification that allows messages to be stored permanently and to allow the stored messages to be delivered to requesting client nodes, regardless if the messages are not available in the network due to the message TTL expiring.",source:"@site/status/deprecated/waku-mailserver.md",sourceDirName:"deprecated",slug:"/deprecated/waku-mailserver",permalink:"/status/deprecated/waku-mailserver",draft:!1,tags:[],version:"current",frontMatter:{title:"WAKU-MAILSERVER",name:"Waku Mailserver",status:"deprecated",description:"Waku Mailserver is a specification that allows messages to be stored permanently and to allow the stored messages to be delivered to requesting client nodes, regardless if the messages are not available in the network due to the message TTL expiring.",editor:"Filip Dimitrijevic &lt;filip@status.im&gt;",contributors:["Adam Babik &lt;adam@status.im&gt;","Oskar Thor\xe9n &lt;oskar@status.im&gt;","Samuel Hawksby-Robinson &lt;samuel@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"SECURE-TRANSPORT",permalink:"/status/deprecated/secure-transport"},next:{title:"WAKU-USAGE",permalink:"/status/deprecated/waku-usage"}},l={},p=[{value:"Abstract",id:"abstract",level:2},{value:"<code>Mailserver</code>",id:"mailserver",level:2},{value:"Archiving messages",id:"archiving-messages",level:3},{value:"Requesting messages",id:"requesting-messages",level:3},{value:"Receiving historic messages",id:"receiving-historic-messages",level:3},{value:"Security considerations",id:"security-considerations",level:2},{value:"Confidentiality",id:"confidentiality",level:3},{value:"Altruistic and centralized operator risk",id:"altruistic-and-centralized-operator-risk",level:3},{value:"Privacy concerns",id:"privacy-concerns",level:3},{value:"Denial-of-service",id:"denial-of-service",level:3},{value:"Changelog",id:"changelog",level:2},{value:"Version 0.1",id:"version-01",level:3},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Status: deprecated"),(0,r.kt)("li",{parentName:"ul"},"Editor: Filip Dimitrijevic ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:filip@status.im"},"filip@status.im"),">"),(0,r.kt)("li",{parentName:"ul"},"Contributors:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Adam Babik ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:adam@status.im"},"adam@status.im"),">"),(0,r.kt)("li",{parentName:"ul"},"Oskar Thor\xe9n ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:oskar@status.im"},"oskar@status.im"),">"),(0,r.kt)("li",{parentName:"ul"},"Samuel Hawksby-Robinson ","<",(0,r.kt)("a",{parentName:"li",href:"mailto:samuel@status.im"},"samuel@status.im"),">")))),(0,r.kt)("h2",{id:"abstract"},"Abstract"),(0,r.kt)("p",null,"Being mostly offline is an intrinsic property of mobile clients.\nThey need to save network transfer and battery consumption to avoid spending too much money or constant charging.\nWaku protocol, on the other hand, is an online protocol.\nMessages are available in the Waku network only for short period of time calculate in seconds."),(0,r.kt)("p",null,"Waku Mailserver is a specification that allows messages to be stored permanently\nand allows the stored messages to be delivered to requesting client nodes,\nregardless if the messages are not available in the network due to the message TTL expiring."),(0,r.kt)("h2",{id:"mailserver"},(0,r.kt)("inlineCode",{parentName:"h2"},"Mailserver")),(0,r.kt)("p",null,"From the network perspective, a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," is just like any other Waku node.\nThe only difference is that a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," has the capability of archiving messages\nand delivering them to its peers on-demand."),(0,r.kt)("p",null,"It is important to notice that a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," will only handle requests from its direct peers\nand exchanged packets between a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," and a peer are p2p messages."),(0,r.kt)("h3",{id:"archiving-messages"},"Archiving messages"),(0,r.kt)("p",null,"A node which wants to provide ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," functionality MUST store envelopes from\nincoming message packets (Waku packet-code ",(0,r.kt)("inlineCode",{parentName:"p"},"0x01"),"). The envelopes can be stored in any\nformat, however they MUST be serialized and deserialized to the Waku envelope format."),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," SHOULD store envelopes for all topics to be generally useful for any peer,\nhowever for specific use cases it MAY store envelopes for a subset of topics."),(0,r.kt)("h3",{id:"requesting-messages"},"Requesting messages"),(0,r.kt)("p",null,"In order to request historic messages, a node MUST send a packet P2P Request (",(0,r.kt)("inlineCode",{parentName:"p"},"0x7e"),") to a peer providing ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," functionality.\nThis packet requires one argument which MUST be a Waku envelope."),(0,r.kt)("p",null,"In the Waku envelope's payload section, there MUST be RLP-encoded information about the details of the request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},"[ Lower, Upper, Bloom, Limit, Cursor ]\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Lower"),": 4-byte wide unsigned integer (UNIX time in seconds; oldest requested envelope's creation time)",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Upper"),": 4-byte wide unsigned integer (UNIX time in seconds; newest requested envelope's creation time)",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Bloom"),": 64-byte wide array of Waku topics encoded in a bloom filter to filter envelopes",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Limit"),": 4-byte wide unsigned integer limiting the number of returned envelopes",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Cursor"),": an array of a cursor returned from the previous request (optional)"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Cursor")," field SHOULD be filled in if a number of envelopes between ",(0,r.kt)("inlineCode",{parentName:"p"},"Lower")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Upper")," is greater than ",(0,r.kt)("inlineCode",{parentName:"p"},"Limit"),"\nso that the requester can send another request using the obtained ",(0,r.kt)("inlineCode",{parentName:"p"},"Cursor")," value.\nWhat exactly is in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Cursor")," is up to the implementation.\nThe requester SHOULD NOT use a ",(0,r.kt)("inlineCode",{parentName:"p"},"Cursor")," obtained from one ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," in a request to another ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," because the format or the result MAY be different."),(0,r.kt)("p",null,"The envelope MUST be encrypted with a symmetric key agreed between the requester and the ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver"),"."),(0,r.kt)("h3",{id:"receiving-historic-messages"},"Receiving historic messages"),(0,r.kt)("p",null,"Historic messages MUST be sent to a peer as a packet with a P2P Message code (",(0,r.kt)("inlineCode",{parentName:"p"},"0x7f"),") followed by an array of Waku envelopes."),(0,r.kt)("p",null,"In order to receive historic messages from a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver"),", a node MUST trust the selected ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver"),",\nthat is allowed to send packets with the P2P Message code. By default, the node discards such packets."),(0,r.kt)("p",null,"Received envelopes MUST be passed through the Waku envelope pipelines\nso that they are picked up by registered filters and passed to subscribers."),(0,r.kt)("p",null,"For a requester, to know that all messages have been sent by a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver"),",\nit SHOULD handle P2P Request Complete code (",(0,r.kt)("inlineCode",{parentName:"p"},"0x7d"),"). This code is followed by the following parameters:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},"[ RequestID, LastEnvelopeHash, Cursor ]\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RequestID"),": 32-byte wide array with a Keccak-256 hash of the envelope containing the original request  "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LastEnvelopeHash"),": 32-byte wide array with a Keccak-256 hash of the last sent envelope for the request  "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Cursor"),": an array of a cursor returned from the previous request (optional)")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"Cursor")," is not empty, it means that not all messages were sent due to the set ",(0,r.kt)("inlineCode",{parentName:"p"},"Limit")," in the request.\nOne or more consecutive requests MAY be sent with ",(0,r.kt)("inlineCode",{parentName:"p"},"Cursor")," field filled in order to receive the rest of the messages."),(0,r.kt)("h2",{id:"security-considerations"},"Security considerations"),(0,r.kt)("h3",{id:"confidentiality"},"Confidentiality"),(0,r.kt)("p",null,"The node encrypts all Waku envelopes. A ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," node can not inspect their contents."),(0,r.kt)("h3",{id:"altruistic-and-centralized-operator-risk"},"Altruistic and centralized operator risk"),(0,r.kt)("p",null,"In order to be useful, a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," SHOULD be online most of time.\nThat means users either have to be a bit tech-savvy to run their own node,\nor rely on someone else to run it for them."),(0,r.kt)("p",null,"Currently, one of Status's legal entities provides ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailservers")," in an altruistic manner,\nbut this is suboptimal from a decentralization, continuance and risk point of view.\nComing up with a better system for this is ongoing research."),(0,r.kt)("p",null,"A Status client SHOULD allow the ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," selection to be customizable."),(0,r.kt)("h3",{id:"privacy-concerns"},"Privacy concerns"),(0,r.kt)("p",null,"In order to use a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver"),", a given node needs to connect to it directly,\ni.e. add the ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," as its peer and mark it as trusted.\nThis means that the ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," is able to send direct p2p messages to the node instead of broadcasting them.\nEffectively, it will have access to the bloom filter of topics that the user is interested in,\nwhen it is online as well as many metadata like IP address."),(0,r.kt)("h3",{id:"denial-of-service"},"Denial-of-service"),(0,r.kt)("p",null,"Since a ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," is delivering expired envelopes and has a direct TCP connection with the recipient,\nthe recipient is vulnerable to DoS attacks from a malicious ",(0,r.kt)("inlineCode",{parentName:"p"},"Mailserver")," node."),(0,r.kt)("h2",{id:"changelog"},"Changelog"),(0,r.kt)("h3",{id:"version-01"},"Version 0.1"),(0,r.kt)("p",null,"Released ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/status-im/specs/commit/664dd1c9df6ad409e4c007fefc8c8945b8d324e8"},"May 22, 2020")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Created document"),(0,r.kt)("li",{parentName:"ul"},"Forked from ",(0,r.kt)("a",{parentName:"li",href:"/status/deprecated/whisper-mailserver"},"whisper-mailserver")),(0,r.kt)("li",{parentName:"ul"},"Change to keep ",(0,r.kt)("inlineCode",{parentName:"li"},"Mailserver")," term consistent"),(0,r.kt)("li",{parentName:"ul"},"Replaced Whisper references with Waku")),(0,r.kt)("h2",{id:"copyright"},"Copyright"),(0,r.kt)("p",null,"Copyright and related rights waived via ",(0,r.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/status-im/specs/commit/664dd1c9df6ad409e4c007fefc8c8945b8d324e8"},"May 22, 2020 change commit"))))}c.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return a?n.createElement(h,s(s({ref:t},d),{},{components:a})):n.createElement(h,s({ref:t},d))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);