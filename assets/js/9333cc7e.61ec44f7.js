"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[8164],{57800:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var i=n(87462),a=(n(67294),n(3905));const r={title:"12/WAKU2-FILTER",name:"Waku v2 Filter",status:"draft",editor:"Hanno Cornelius &lt;hanno@status.im&gt;",contributors:["Dean Eigenmann &lt;dean@status.im&gt;","Oskar Thor\xe9n &lt;oskarth@titanproxy.com&gt;","Sanaz Taheri &lt;sanaz@status.im&gt;","Ebube Ud &lt;ebube@status.im&gt;"]},o=void 0,s={unversionedId:"standards/core/12/previous-versions00/filter",id:"standards/core/12/previous-versions00/filter",title:"12/WAKU2-FILTER",description:"- Status: draft",source:"@site/waku/standards/core/12/previous-versions00/filter.md",sourceDirName:"standards/core/12/previous-versions00",slug:"/standards/core/12/previous-versions00/filter",permalink:"/waku/standards/core/12/previous-versions00/filter",draft:!1,tags:[],version:"current",frontMatter:{title:"12/WAKU2-FILTER",name:"Waku v2 Filter",status:"draft",editor:"Hanno Cornelius &lt;hanno@status.im&gt;",contributors:["Dean Eigenmann &lt;dean@status.im&gt;","Oskar Thor\xe9n &lt;oskarth@titanproxy.com&gt;","Sanaz Taheri &lt;sanaz@status.im&gt;","Ebube Ud &lt;ebube@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"12/WAKU2-FILTER",permalink:"/waku/standards/core/12/filter"},next:{title:"13/WAKU2-STORE",permalink:"/waku/standards/core/13/store"}},l={},u=[{value:"Content filtering",id:"content-filtering",level:2},{value:"Rationale",id:"rationale",level:2},{value:"Design Requirements",id:"design-requirements",level:2},{value:"Security Consideration",id:"security-consideration",level:2},{value:"Terminology",id:"terminology",level:3},{value:"Adversarial Model",id:"adversarial-model",level:2},{value:"Protobuf",id:"protobuf",level:3},{value:"FilterRPC",id:"filterrpc",level:4},{value:"FilterRequest",id:"filterrequest",level:4},{value:"MessagePush",id:"messagepush",level:4},{value:"Future Work",id:"future-work",level:2},{value:"Changelog",id:"changelog",level:2},{value:"Next",id:"next",level:3},{value:"2.0.0-beta2",id:"200-beta2",level:3},{value:"2.0.0-beta1",id:"200-beta1",level:3},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],d={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Status: draft"),(0,a.kt)("li",{parentName:"ul"},"Editor: Hanno Cornelius ","<",(0,a.kt)("a",{parentName:"li",href:"mailto:hanno@status.im"},"hanno@status.im"),">"),(0,a.kt)("li",{parentName:"ul"},"Contributors:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Dean Eigenmann ","<",(0,a.kt)("a",{parentName:"li",href:"mailto:dean@status.im"},"dean@status.im"),">"),(0,a.kt)("li",{parentName:"ul"},"Oskar Thor\xe9n ","<",(0,a.kt)("a",{parentName:"li",href:"mailto:oskarth@titanproxy.com"},"oskarth@titanproxy.com"),">"),(0,a.kt)("li",{parentName:"ul"},"Sanaz Taheri ","<",(0,a.kt)("a",{parentName:"li",href:"mailto:sanaz@status.im"},"sanaz@status.im"),">"),(0,a.kt)("li",{parentName:"ul"},"Ebube Ud ","<",(0,a.kt)("a",{parentName:"li",href:"mailto:ebube@status.im"},"ebube@status.im"),">")))),(0,a.kt)("p",null,"version: 00"),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter")," is a protocol that enables subscribing to messages that a peer receives.\nThis is a more lightweight version of ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuRelay"),"\nspecifically designed for bandwidth restricted devices.\nThis is due to the fact that light nodes subscribe to full-nodes and\nonly receive the messages they desire."),(0,a.kt)("h2",{id:"content-filtering"},"Content filtering"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Protocol identifier*"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"/vac/waku/filter/2.0.0-beta1")),(0,a.kt)("p",null,"Content filtering is a way to do ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern#Message_filtering"},"message-based\nfiltering"),".\nCurrently the only content filter being applied is on ",(0,a.kt)("inlineCode",{parentName:"p"},"contentTopic"),". This\ncorresponds to topics in Waku v1."),(0,a.kt)("h2",{id:"rationale"},"Rationale"),(0,a.kt)("p",null,"Unlike the ",(0,a.kt)("inlineCode",{parentName:"p"},"store")," protocol for historical messages, this protocol allows for\nnative lower latency scenarios such as instant messaging. It is thus\ncomplementary to it."),(0,a.kt)("p",null,"Strictly speaking, it is not just doing basic request response, but performs\nsender push based on receiver intent. While this can be seen as a form of light\npub/sub, it is only used between two nodes in a direct fashion. Unlike the\nGossip domain, this is meant for light nodes which put a premium on bandwidth.\nNo gossiping takes place."),(0,a.kt)("p",null,"It is worth noting that a light node could get by with only using the ",(0,a.kt)("inlineCode",{parentName:"p"},"store"),"\nprotocol to query for a recent time window, provided it is acceptable to do\nfrequent polling."),(0,a.kt)("h2",{id:"design-requirements"},"Design Requirements"),(0,a.kt)("p",null,"The effectiveness and reliability of the content filtering service\nenabled by ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter")," protocol rely on the ",(0,a.kt)("em",{parentName:"p"},"high availability")," of the full nodes\nas the service providers.\nTo this end, full nodes must feature ",(0,a.kt)("em",{parentName:"p"},"high uptime"),"\n(to persistently listen and capture the network messages)\nas well as ",(0,a.kt)("em",{parentName:"p"},"high Bandwidth")," (to provide timely message delivery to the light nodes)."),(0,a.kt)("h2",{id:"security-consideration"},"Security Consideration"),(0,a.kt)("p",null,"Note that while using ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter")," allows light nodes to save bandwidth,\nit comes with a privacy cost in the sense that they need to disclose their liking\ntopics to the full nodes to retrieve the relevant messages.\nCurrently, anonymous subscription is not supported by the ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter"),", however,\npotential solutions in this regard are sketched below in ",(0,a.kt)("a",{parentName:"p",href:"#future-work"},"Future Work"),"\nsection."),(0,a.kt)("h3",{id:"terminology"},"Terminology"),(0,a.kt)("p",null,"The term Personally identifiable information (PII)\nrefers to any piece of data that can be used to uniquely identify a user.\nFor example, the signature verification key, and\nthe hash of one's static IP address are unique for each user and hence count as PII."),(0,a.kt)("h2",{id:"adversarial-model"},"Adversarial Model"),(0,a.kt)("p",null,"Any node running the ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter")," protocol i.e.,\nboth the subscriber node and the queried node are considered as an adversary.\nFurthermore, we consider the adversary as a passive entity\nthat attempts to collect information from other nodes to conduct an attack but\nit does so without violating protocol definitions and instructions.\nFor example, under the passive adversarial model,\nno malicious node intentionally hides the messages matching\nto one's subscribed content filter as it is against the description\nof the ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter")," protocol."),(0,a.kt)("p",null,"The following are not considered as part of the adversarial model:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An adversary with a global view of all the nodes and their connections."),(0,a.kt)("li",{parentName:"ul"},"An adversary that can eavesdrop on communication links\nbetween arbitrary pairs of nodes (unless the adversary is one end of the communication).\nIn specific, the communication channels are assumed to be secure.")),(0,a.kt)("h3",{id:"protobuf"},"Protobuf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},"message FilterRequest {\n  bool subscribe = 1;\n  string topic = 2;\n  repeated ContentFilter contentFilters = 3;\n\n  message ContentFilter {\n    string contentTopic = 1;\n  }\n}\n\nmessage MessagePush {\n  repeated WakuMessage messages = 1;\n}\n\nmessage FilterRPC {\n  string requestId = 1;\n  FilterRequest request = 2;\n  MessagePush push = 3;\n}\n")),(0,a.kt)("h4",{id:"filterrpc"},"FilterRPC"),(0,a.kt)("p",null,"A node MUST send all Filter messages (",(0,a.kt)("inlineCode",{parentName:"p"},"FilterRequest"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MessagePush"),")\nwrapped inside a ",(0,a.kt)("inlineCode",{parentName:"p"},"FilterRPC")," this allows the node handler\nto determine how to handle a message as the Waku Filter protocol\nis not a request response based protocol but instead a push based system."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"requestId")," MUST be a uniquely generated string. When a ",(0,a.kt)("inlineCode",{parentName:"p"},"MessagePush")," is sent\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"requestId")," MUST match the ",(0,a.kt)("inlineCode",{parentName:"p"},"requestId")," of the subscribing ",(0,a.kt)("inlineCode",{parentName:"p"},"FilterRequest"),"\nwhose filters matched the message causing it to be pushed."),(0,a.kt)("h4",{id:"filterrequest"},"FilterRequest"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"FilterRequest")," contains an optional topic, zero or more content filters and\na boolean signifying whether to subscribe or unsubscribe to the given filters.\nTrue signifies 'subscribe' and false signifies 'unsubscribe'."),(0,a.kt)("p",null,"A node that sends the RPC with a filter request and ",(0,a.kt)("inlineCode",{parentName:"p"},"subscribe")," set to 'true'\nrequests that the filter node SHOULD notify the light requesting node of messages\nmatching this filter."),(0,a.kt)("p",null,"A node that sends the RPC with a filter request and ",(0,a.kt)("inlineCode",{parentName:"p"},"subscribe")," set to 'false'\nrequests that the filter node SHOULD stop notifying the light requesting node\nof messages matching this filter if it is currently doing so."),(0,a.kt)("p",null,"The filter matches when content filter and, optionally, a topic is matched.\nContent filter is matched when a ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuMessage")," ",(0,a.kt)("inlineCode",{parentName:"p"},"contentTopic")," field is the same."),(0,a.kt)("p",null,"A filter node SHOULD honor this request, though it MAY choose not to do so. If\nit chooses not to do so it MAY tell the light why. The mechanism for doing this\nis currently not specified. For notifying the light node a filter node sends a\nMessagePush message."),(0,a.kt)("p",null,"Since such a filter node is doing extra work for a light node, it MAY also\naccount for usage and be selective in how much service it provides. This\nmechanism is currently planned but underspecified."),(0,a.kt)("h4",{id:"messagepush"},"MessagePush"),(0,a.kt)("p",null,"A filter node that has received a filter request SHOULD push all messages that\nmatch this filter to a light node. These ",(0,a.kt)("a",{parentName:"p",href:"../14/message"},(0,a.kt)("inlineCode",{parentName:"a"},"WakuMessage"),"'s"),"\nare likely to come from the\n",(0,a.kt)("inlineCode",{parentName:"p"},"relay")," protocol and be kept at the Node, but there MAY be other sources or\nprotocols where this comes from. This is up to the consumer of the protocol."),(0,a.kt)("p",null,"A filter node MUST NOT send a push message for messages that have not been\nrequested via a FilterRequest."),(0,a.kt)("p",null,"If a specific light node isn't connected to a filter node for some specific\nperiod of time (e.g. a TTL), then the filter node MAY choose to not push these\nmessages to the node. This period is up to the consumer of the protocol and node\nimplementation, though a reasonable default is one minute."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"future-work"},"Future Work"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Anonymous filter subscription"),":\nThis feature guarantees that nodes can anonymously subscribe for a message filter\n(i.e., without revealing their exact content filter).\nAs such, no adversary in the ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter")," protocol would be able to link nodes\nto their subscribed content filers.\nThe current version of the ",(0,a.kt)("inlineCode",{parentName:"p"},"WakuFilter")," protocol does not provide anonymity\nas the subscribing node has a direct connection to the full node and\nexplicitly submits its content filter to be notified about the matching messages.\nHowever, one can consider preserving anonymity through one of the following ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"By hiding the source of the subscription i.e., anonymous communication.\nThat is the subscribing node shall hide all its PII in its filter request e.g.,\nits IP address.\nThis can happen by the utilization of a proxy server or by using Tor")),(0,a.kt)("p",null,".\nNote that the current structure of filter requests i.e.,\n",(0,a.kt)("inlineCode",{parentName:"p"},"FilterRPC")," does not embody any piece of PII, otherwise,\nsuch data fields must be treated carefully to achieve anonymity."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"By deploying secure 2-party computations in which the subscribing node obtains\nthe messages matching a content filter whereas the full node learns nothing\nabout the content filter as well as the messages pushed to the subscribing node.\nExamples of such 2PC protocols are ",(0,a.kt)("a",{parentName:"li",href:"https://link.springer.com/referenceworkentry/10.1007%2F978-1-4419-5906-5_9#:~:text=Oblivious%20transfer%20(OT)%20is%20a,information%20the%20receiver%20actually%20obtains."},"Oblivious Transfers"),"\nand one-way Private Set Intersections (PSI).")),(0,a.kt)("h2",{id:"changelog"},"Changelog"),(0,a.kt)("h3",{id:"next"},"Next"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Added initial threat model and security analysis.")),(0,a.kt)("h3",{id:"200-beta2"},"2.0.0-beta2"),(0,a.kt)("p",null,"Initial draft version. Released ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vacp2p/specs/commit/5ceeb88cee7b918bb58f38e7c4de5d581ff31e68"},"2020-10-28")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fix: Ensure contentFilter is a repeated field, on implementation"),(0,a.kt)("li",{parentName:"ul"},"Change: Add ability to unsubscribe from filters.\nMake ",(0,a.kt)("inlineCode",{parentName:"li"},"subscribe")," an explicit boolean indication.\nEdit protobuf field order to be consistent with libp2p.")),(0,a.kt)("h3",{id:"200-beta1"},"2.0.0-beta1"),(0,a.kt)("p",null,"Initial draft version. Released ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vacp2p/specs/commit/31857c7434fa17efc00e3cd648d90448797d107b"},"2020-10-05")),(0,a.kt)("h2",{id:"copyright"},"Copyright"),(0,a.kt)("p",null,"Copyright and related rights waived via\n",(0,a.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern#Message_filtering"},"Message Filtering (Wikipedia)"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/tree/master/pubsub#topic-validation"},"Libp2p PubSub spec - topic validation")))))}p.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),u=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),h=u(n),c=a,m=h["".concat(l,".").concat(c)]||h[c]||p[c]||r;return n?i.createElement(m,o(o({ref:t},d),{},{components:n})):i.createElement(m,o({ref:t},d))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);