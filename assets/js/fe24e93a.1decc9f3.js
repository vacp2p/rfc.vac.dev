"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[4792],{85475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={title:"34/WAKU2-PEER-EXCHANGE",name:"Waku2 Peer Exchange",status:"draft",category:"Standards Track",editor:"Hanno Cornelius &lt;hanno@status.im&gt;",contributors:["Daniel Kaiser &lt;danielkaiser@status.im&gt;"]},i=void 0,o={unversionedId:"standards/core/34/peer-exchange",id:"standards/core/34/peer-exchange",title:"34/WAKU2-PEER-EXCHANGE",description:"- Status: draft",source:"@site/waku/standards/core/34/peer-exchange.md",sourceDirName:"standards/core/34",slug:"/standards/core/34/peer-exchange",permalink:"/waku/standards/core/34/peer-exchange",draft:!1,tags:[],version:"current",frontMatter:{title:"34/WAKU2-PEER-EXCHANGE",name:"Waku2 Peer Exchange",status:"draft",category:"Standards Track",editor:"Hanno Cornelius &lt;hanno@status.im&gt;",contributors:["Daniel Kaiser &lt;danielkaiser@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"33/WAKU2-DISCV5",permalink:"/waku/standards/core/33/discv5"},next:{title:"36/WAKU2-BINDINGS-API",permalink:"/waku/standards/core/36/bindings-api"}},p={},c=[{value:"Abstract",id:"abstract",level:2},{value:"Background and Motivation",id:"background-and-motivation",level:2},{value:"Theory and Protocol Semantics",id:"theory-and-protocol-semantics",level:2},{value:"Wire Format Specification",id:"wire-format-specification",level:2},{value:"Implementation Suggestions",id:"implementation-suggestions",level:2},{value:"Discovery Interface",id:"discovery-interface",level:3},{value:"Exchange Peer Cache Size",id:"exchange-peer-cache-size",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Privacy and Anonymity",id:"privacy-and-anonymity",level:3},{value:"Requester",id:"requester",level:3},{value:"Responder",id:"responder",level:3},{value:"Further Considerations",id:"further-considerations",level:3},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],l={toc:c};function d(e){let{components:t,...s}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Status: draft"),(0,a.kt)("li",{parentName:"ul"},"Category: Standards Track"),(0,a.kt)("li",{parentName:"ul"},"Editor: Hanno Cornelius ","<",(0,a.kt)("a",{parentName:"li",href:"mailto:hanno@status.im"},"hanno@status.im"),">"),(0,a.kt)("li",{parentName:"ul"},"Contributors:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Daniel Kaiser ","<",(0,a.kt)("a",{parentName:"li",href:"mailto:danielkaiser@status.im"},"danielkaiser@status.im"),">")))),(0,a.kt)("h2",{id:"abstract"},"Abstract"),(0,a.kt)("p",null,"This document specifies a simple request-response peer exchange protocol.\nResponders send information about a requested number of peers.\nThe main purpose of this protocol is providing resource restricted devices with peers."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Protocol Identifier"))),(0,a.kt)("p",null,">"," /vac/waku/peer-exchange/2.0.0-alpha1"),(0,a.kt)("h2",{id:"background-and-motivation"},"Background and Motivation"),(0,a.kt)("p",null,"It may not be feasible, on resource restricted devices,\nto take part in distributed random sampling ambient peer discovery protocols,\nsuch as ",(0,a.kt)("a",{parentName:"p",href:"/waku/standards/core/33/discv5"},"33/WAKU2-DISCV5"),".\nThe Waku peer discovery protocol, specified in this document,\nallows resource restricted devices to request a list of peers from a service node.\nNetwork parameters necessary to connect to this service node COULD be learned\nfrom a static bootstrapping method or\nusing ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1459"},"EIP-1459: Node Discovery via DNS"),".\nThe advantage of using Waku peer exchange to discover new peers,\ncompared to relying on a static peer list or DNS discovery, is a more even load distribution.\nIf a lot of resource restricted nodes would use the same service nodes as relay\nor store nodes, the load on these would be very high.\nHeavily used static nodes also add a centralized element.\nDowntime of such a node might significantly impact the network."),(0,a.kt)("p",null,"However, the resource efficiency of this protocol comes at an anonymity cost,\nwhich is explained in the\n",(0,a.kt)("a",{parentName:"p",href:"#security-considerations"},"Security/Privacy Considerations")," section.\nThis protocol SHOULD only be used if ",(0,a.kt)("a",{parentName:"p",href:"/waku/standards/core/33/discv5"},"33/WAKU2-DISCV5")," is infeasible."),(0,a.kt)("h2",{id:"theory-and-protocol-semantics"},"Theory and Protocol Semantics"),(0,a.kt)("p",null,"The keywords \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d,\n\u201cSHOULD\u201d, \u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cMAY\u201d, and\n\u201cOPTIONAL\u201d in this document are to be interpreted as described in ",(0,a.kt)("a",{parentName:"p",href:"https://www.ietf.org/rfc/rfc2119.txt"},"2119"),"."),(0,a.kt)("p",null,"The peer exchange protocol, specified in this document,\nis a simple request-response protocol.\nAs Figure 1 illustrates, the requesting node sends a request to a peer,\nwhich acts as the responder.\nThe responder replies with a list of ENRs as specified in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/master/standards/core/enr.md"},"WAKU2-ENR"),".\nThe ",(0,a.kt)("a",{parentName:"p",href:"https://docs.libp2p.io/concepts/addressing/"},"multiaddresses"),"\nused to connect to the respective peers can be extracted from the ENRs."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Figure 1: The responder provides a list of ENRs to the requester. These ENRs contain the information necessary for connecting to the respective peers.",src:n(66386).Z,width:"372",height:"208"})),(0,a.kt)("p",null,"In order to protect its anonymity,\nthe responder MUST NOT provide peers from its actively used peer list\nas this opens pathways to ",(0,a.kt)("em",{parentName:"p"},"Neighbourhood Surveillance")," attacks, as described in the\n",(0,a.kt)("a",{parentName:"p",href:"#security-considerations"},"Security/Privacy Considerations Section"),".\nThe responder SHOULD provide a set of peers\nthat has been retrieved using ambient peer discovery methods supporting random sampling,\ne.g. ",(0,a.kt)("a",{parentName:"p",href:"/waku/standards/core/33/discv5"},"33/WAKU2-DISCV5"),".\nThis both protects the responder's anonymity as well as helps distributing load."),(0,a.kt)("p",null,"To allow for fast responses, responders SHOULD retrieve peers unsolicited\n(before receiving a query) and\nmaintain a queue of peers for the purpose of providing them in peer exchange responses.\nTo get the best anonymity properties with respect to response peer sets,\nresponders SHOULD use each of these peers only once."),(0,a.kt)("p",null,"To save bandwidth, and as a trade off to anonymity,\nresponders MAY maintain a larger cache of exchange peers and\nrandomly sample response sets from this local cache.\nThe size of the cache SHOULD be large enough to allow randomly sampling peer sets\nthat (on average) do not overlap too much.\nThe responder SHOULD periodically replace the oldest peers in the cache.\nThe RECOMMENDED options for the cache size are described in the\n",(0,a.kt)("a",{parentName:"p",href:"#implementation-suggestions"},"Implementation Suggestions Section"),"."),(0,a.kt)("p",null,"Requesters, in the context of the specified peer exchange protocol,\nSHOULD be resource restricted devices.\nWhile any node could technically act as a requester,\nusing the peer exchange protocol comes with two drawbacks:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"reducing ",(0,a.kt)("a",{parentName:"li",href:"#security-considerations"},"anonymity")),(0,a.kt)("li",{parentName:"ul"},"causing load on responder nodes")),(0,a.kt)("h2",{id:"wire-format-specification"},"Wire Format Specification"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf"},'syntax = "proto3";\n\nmessage PeerInfo {\n  bytes enr = 1;\n}\n\nmessage PeerExchangeQuery {\n  uint64 num_peers = 1;\n}\n\nmessage PeerExchangeResponse {\n  repeated PeerInfo peer_infos = 1;\n}\n\nmessage PeerExchangeRPC {\n  PeerExchangeQuery query = 1;\n  PeerExchangeResponse response = 2;\n}\n\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"enr")," field contains a Waku ENR as specified in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/master/standards/core/enr.md"},"WAKU2-ENR"),"."),(0,a.kt)("p",null,"Requesters send a ",(0,a.kt)("inlineCode",{parentName:"p"},"PeerExchangeQuery")," to a peer.\nResponders SHOULD include a maximum of ",(0,a.kt)("inlineCode",{parentName:"p"},"num_peers")," ",(0,a.kt)("inlineCode",{parentName:"p"},"PeerInfo")," instances into a response.\nResponders send a ",(0,a.kt)("inlineCode",{parentName:"p"},"PeerExchangeResponse")," to requesters\ncontaining a list of ",(0,a.kt)("inlineCode",{parentName:"p"},"PeerInfo")," instances, which in turn hold an ENR."),(0,a.kt)("h2",{id:"implementation-suggestions"},"Implementation Suggestions"),(0,a.kt)("h3",{id:"discovery-interface"},"Discovery Interface"),(0,a.kt)("p",null,"Implementations can implement the libp2p discovery interface:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/status-im/nim-libp2p/issues/140"},"nim")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/libp2p/js-libp2p-interfaces/tree/master/packages/interface-peer-discovery"},"javascript"),".")),(0,a.kt)("h3",{id:"exchange-peer-cache-size"},"Exchange Peer Cache Size"),(0,a.kt)("p",null,"The size of the (optional) exchange peer cache discussed in\n",(0,a.kt)("a",{parentName:"p",href:"#theory-and-protocol-semantics"},"Theory and Protocol Semantics"),"\ndepends on the average number of requested peers,\nwhich is expected to be the outbound degree of the underlying\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md"},"libp2p gossipsub"),"\nmesh network.\nThe RECOMMENDED value for this outbound degree is 6 (see parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"D")," in ",(0,a.kt)("a",{parentName:"p",href:"/waku/informational/29/config"},"29/WAKU2-CONFIG"),").\nIt is RECOMMENDED for the cache to hold at least 10 times as many peers (60)."),(0,a.kt)("p",null,"The RECCOMENDED cache size also depends on the number of requesters a responder\nis expected to serve within a ",(0,a.kt)("em",{parentName:"p"},"refresh cycle"),".\nA refresh cycle is the time interval in which all peers in the cache\nare expected to be replaced.\nIf the number of requests expected per refresh cycle exceeds 600\n(10 times the above recommended 60),\nit is RECOMMENDED to increase the cache size to at least a tenth of that number."),(0,a.kt)("h2",{id:"security-considerations"},"Security Considerations"),(0,a.kt)("h3",{id:"privacy-and-anonymity"},"Privacy and Anonymity"),(0,a.kt)("p",null,"The peer exchange protocol specified in this document comes with anonymity and\nsecurity implications.\nWe differentiate these implications into the requester and responder side, respectively."),(0,a.kt)("h3",{id:"requester"},"Requester"),(0,a.kt)("p",null,"With a simple peer exchange protocol,\nthe requester is inherently susceptible to both ",(0,a.kt)("em",{parentName:"p"},"neighbourhood surveillance")," and\n",(0,a.kt)("em",{parentName:"p"},"controlled neighbourhood")," attacks."),(0,a.kt)("p",null,"To mount a ",(0,a.kt)("em",{parentName:"p"},"neighbourhood surveillance")," attack,\nan attacker has to connect to the peers of the victim node.\nThe peer exchange protocol allows a malicious responder to easily get into this position.\nThe responder connects to a set of peers and\nsimply returns this set of peers to the requester."),(0,a.kt)("p",null,"The peer exchange protocol also makes it much easier to get into the position\nrequired for the ",(0,a.kt)("em",{parentName:"p"},"controlled neighbourhood")," attack:\nA malicious responder provides controlled peers in the response peer list."),(0,a.kt)("p",null,"More on these attacks may be found in our ",(0,a.kt)("a",{parentName:"p",href:"https://vac.dev/wakuv2-relay-anon"},"research log article"),"."),(0,a.kt)("p",null,"As a weak mitigation the requester MAY ask several peers and\nselect a subset of the returned peers."),(0,a.kt)("h3",{id:"responder"},"Responder"),(0,a.kt)("p",null,"Responders that answer with active mesh peers are more vulnerable\nto a ",(0,a.kt)("em",{parentName:"p"},"neighbourhood surveillance")," attack.\nResponding with the set of active mesh peers allows a malicious requester to\nget into the required position more easily.\nIt takes away the first hurdle of the ",(0,a.kt)("em",{parentName:"p"},"neighbourhood surveillance")," attack:\nThe attacker knows which peers to try to connect to.\nThis increased vulnerability can be avoided by only responding\nwith randomly sampled sets of peers,\ne.g. by requesting a random peer set via ",(0,a.kt)("a",{parentName:"p",href:"/waku/standards/core/33/discv5"},"33/WAKU2-DISCV5"),".\n(As stated in the ",(0,a.kt)("a",{parentName:"p",href:"#theory-and-protocol-semantics"},"Theory and Protocol Semantics Section"),",\nthese peer sets SHOULD be retrieved unsolicitedly before\nreceiving requests to achieve faster response times.)"),(0,a.kt)("p",null,"Responders are also susceptible to amplification DoS attacks.\nRequesters send a simple message request which causes responders to\nengage in ambient peer discovery to retrieve a new random peer set.\nAs a mitigation, responders MAY feature a ",(0,a.kt)("inlineCode",{parentName:"p"},"seen cache")," for requests and\nonly answer once per time interval.\nThe exchange-peer cache discussed in ",(0,a.kt)("a",{parentName:"p",href:"#theory-and-protocol-semantics"},"Theory and Protocol Semantics Section"),"\nalso provides mitigation.\nStill, frequent queries can tigger the refresh cycle more often.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"seen cache")," MAY be used in conjunction to provide additional mitigation."),(0,a.kt)("h3",{id:"further-considerations"},"Further Considerations"),(0,a.kt)("p",null,"The response field contains ENRs as specified in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/master/standards/core/enr.md"},"WAKU2-ENR"),".\nWhile ENRs contain signatures, they do not violate the ",(0,a.kt)("a",{parentName:"p",href:"/waku/standards/core/11/relay##signature-policy"},"Waku relay no-sign policy"),",\nbecause they are part of the discovery domain and\nare not propagated in the relay domain.\nHowever, there might still be some form of leakage:\nENRs could be used to track peers and facilitate linking attacks.\nWe will investigate this further in our Waku anonymity analysis."),(0,a.kt)("h2",{id:"copyright"},"Copyright"),(0,a.kt)("p",null,"Copyright and related rights waived via ",(0,a.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/waku/standards/core/33/discv5"},"33/WAKU2-DISCV5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-1459"},"EIP-1459: Node Discovery via DNS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/waku-org/specs/blob/master/standards/core/enr.md"},"WAKU2-ENR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.libp2p.io/concepts/addressing/"},"multiaddress")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/status-im/nim-libp2p/issues/140"},"libp2p discovery interface in nim")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/libp2p/js-libp2p-interfaces/tree/master/packages/interface-peer-discovery"},"libp2p discovery interface in javascript")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md"},"libp2p gossipsub")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/waku/informational/29/config"},"29/WAKU2-CONFIG")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://vac.dev/wakuv2-relay-anon"},"Waku Relay Anonymity")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/waku/standards/core/11/relay##signature-policy"},"Waku relay no-sign policy"))))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=c(n),h=a,m=u["".concat(p,".").concat(h)]||u[h]||d[h]||s;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},66386:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/protocol-cd6199a6e06644bdd274578c9e204369.svg"}}]);