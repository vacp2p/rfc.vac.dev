"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[2371],{69070:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={title:"63/STATUS-Keycard-Usage",name:"Status Keycard Usage",status:"draft",category:"Standards Track",description:"Describes how an application can use the Status Keycard to create, store and transact with different account addresses.",editor:"Aaryamann Challani &lt;p1ge0nh8er@proton.me&gt;",contributors:["Jimmy Debe &lt;jimmy@status.im&gt;"]},s=void 0,l={unversionedId:"63/keycard-usage",id:"63/keycard-usage",title:"63/STATUS-Keycard-Usage",description:"Describes how an application can use the Status Keycard to create, store and transact with different account addresses.",source:"@site/status/63/keycard-usage.md",sourceDirName:"63",slug:"/63/keycard-usage",permalink:"/status/63/keycard-usage",draft:!1,tags:[],version:"current",frontMatter:{title:"63/STATUS-Keycard-Usage",name:"Status Keycard Usage",status:"draft",category:"Standards Track",description:"Describes how an application can use the Status Keycard to create, store and transact with different account addresses.",editor:"Aaryamann Challani &lt;p1ge0nh8er@proton.me&gt;",contributors:["Jimmy Debe &lt;jimmy@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"62/STATUS-PAYLOADS",permalink:"/status/62/payloads"},next:{title:"65/STATUS-ACCOUNT-ADDRESS",permalink:"/status/65/account-address"}},o={},p=[{value:"Terminology",id:"terminology",level:2},{value:"Abstract",id:"abstract",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Usage",id:"usage",level:2},{value:"Endpoints",id:"endpoints",level:3},{value:"1. Initialize Keycard (<code>/init-keycard</code>)",id:"1-initialize-keycard-init-keycard",level:4},{value:"2. Get Application Info (<code>/get-application-info</code>)",id:"2-get-application-info-get-application-info",level:3},{value:"If the keycard is not initialized yet",id:"if-the-keycard-is-not-initialized-yet",level:4},{value:"If the keycard is initialized",id:"if-the-keycard-is-initialized",level:4},{value:"3. Pairing the Keycard to the Client device (<code>/pair</code>)",id:"3-pairing-the-keycard-to-the-client-device-pair",level:3},{value:"4. Generate a new set of keys (<code>/generate-and-load-keys</code>)",id:"4-generate-a-new-set-of-keys-generate-and-load-keys",level:3},{value:"5. Get a set of generated keys (<code>/get-keys</code>)",id:"5-get-a-set-of-generated-keys-get-keys",level:3},{value:"6. Sign a transaction (<code>/sign</code>)",id:"6-sign-a-transaction-sign",level:3},{value:"7. Export a key (<code>/export-key</code>)",id:"7-export-a-key-export-key",level:3},{value:"8. Verify a pin (<code>/verify-pin</code>)",id:"8-verify-a-pin-verify-pin",level:3},{value:"9. Change the pin (<code>/change-pin</code>)",id:"9-change-the-pin-change-pin",level:3},{value:"If the operation was successful",id:"if-the-operation-was-successful",level:4},{value:"If the operation was unsuccessful",id:"if-the-operation-was-unsuccessful",level:4},{value:"10. Unblock the keycard (<code>/unblock-pin</code>)",id:"10-unblock-the-keycard-unblock-pin",level:3},{value:"Flows",id:"flows",level:2},{value:"1. A new user wants to use the Keycard with the application",id:"1-a-new-user-wants-to-use-the-keycard-with-the-application",level:3},{value:"2. An existing user wants to use the Keycard with the application",id:"2-an-existing-user-wants-to-use-the-keycard-with-the-application",level:3},{value:"3. An existing user wants to use the Keycard with a new client device",id:"3-an-existing-user-wants-to-use-the-keycard-with-a-new-client-device",level:3},{value:"4. An existing user wishes to verify the pin of the Keycard",id:"4-an-existing-user-wishes-to-verify-the-pin-of-the-keycard",level:3},{value:"5. An existing user wishes to change the pin of the Keycard",id:"5-an-existing-user-wishes-to-change-the-pin-of-the-keycard",level:3},{value:"6. An existing user wishes to unblock the Keycard",id:"6-an-existing-user-wishes-to-unblock-the-keycard",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Privacy Considerations",id:"privacy-considerations",level:2},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Status: draft"),(0,i.kt)("li",{parentName:"ul"},"Category: Standards Track"),(0,i.kt)("li",{parentName:"ul"},"Editor: Aaryamann Challani ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:p1ge0nh8er@proton.me"},"p1ge0nh8er@proton.me"),">"),(0,i.kt)("li",{parentName:"ul"},"Contributors:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Jimmy Debe ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:jimmy@status.im"},"jimmy@status.im"),">")))),(0,i.kt)("h2",{id:"terminology"},"Terminology"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Account"),": A valid\n",(0,i.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-32"),"\ncompliant key."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Multiaccount"),": An account from which multiple Accounts can be derived.")),(0,i.kt)("h2",{id:"abstract"},"Abstract"),(0,i.kt)("p",null,"This specification describes how an application can use the Status Keycard to -"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create Multiaccounts"),(0,i.kt)("li",{parentName:"ol"},"Store Multiaccounts"),(0,i.kt)("li",{parentName:"ol"},"Use Multiaccounts for transaction or message signing"),(0,i.kt)("li",{parentName:"ol"},"Derive Accounts from Multiaccounts")),(0,i.kt)("p",null,"More documentation on the Status Keycard can be found ",(0,i.kt)("a",{parentName:"p",href:"https://keycard.tech/docs/"},"here")),(0,i.kt)("h2",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"The Status Keycard is a hardware wallet that can be used to store and\nsign transactions.\nFor the purpose of the Status App,\nthis specification describes how the Keycard SHOULD be used to store and\nsign transactions."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"endpoints"},"Endpoints"),(0,i.kt)("h4",{id:"1-initialize-keycard-init-keycard"},"1. Initialize Keycard (",(0,i.kt)("inlineCode",{parentName:"h4"},"/init-keycard"),")"),(0,i.kt)("p",null,"To initialize the keycard for use with the application.\nThe keycard is locked with a 6 digit pin."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pin": 6_digit_pin\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "password": password_to_unlock_keycard,\n  "puk": 12_digit_recovery_code,\n  "pin": provided_pin,\n}\n')),(0,i.kt)("p",null,"The keycard MUST be initialized before it can be used with the application.\nThe application SHOULD provide a way to recover the keycard in case the pin is forgotten."),(0,i.kt)("h3",{id:"2-get-application-info-get-application-info"},"2. Get Application Info (",(0,i.kt)("inlineCode",{parentName:"h3"},"/get-application-info"),")"),(0,i.kt)("p",null,"To fetch if the keycard is ready to be used by the application."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("p",null,"The requester MAY add a ",(0,i.kt)("inlineCode",{parentName:"p"},"pairing")," field to filter through the generated keys"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pairing": <shared_secret>/<pairing_index>/<256_bit_salt> OR null\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("h4",{id:"if-the-keycard-is-not-initialized-yet"},"If the keycard is not initialized yet"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "initialized?": false\n}\n')),(0,i.kt)("h4",{id:"if-the-keycard-is-initialized"},"If the keycard is initialized"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "free-pairing-slots": number, \n  "app-version": major_version.minor_version, \n  "secure-channel-pub-key": valid_bip32_key,, \n  "key-uid": unique_id_of_the_default_key,\n  "instance-uid": unique_instance_id, \n  "paired?": bool,\n  "has-master-key?": bool, \n  "initialized?" true\n}\n')),(0,i.kt)("h3",{id:"3-pairing-the-keycard-to-the-client-device-pair"},"3. Pairing the Keycard to the Client device (",(0,i.kt)("inlineCode",{parentName:"h3"},"/pair"),")"),(0,i.kt)("p",null,"To establish a secure communication channel described ",(0,i.kt)("a",{parentName:"p",href:"https://keycard.tech/docs/apdu/opensecurechannel.html"},"here"),",\nthe keycard and the client device need to be paired."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "password": password_to_unlock_keycard\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'"<shared_secret>/<pairing_index>/<256_bit_salt>"\n')),(0,i.kt)("h3",{id:"4-generate-a-new-set-of-keys-generate-and-load-keys"},"4. Generate a new set of keys (",(0,i.kt)("inlineCode",{parentName:"h3"},"/generate-and-load-keys"),")"),(0,i.kt)("p",null,"To generate a new set of keys and load them onto the keycard."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "mnemonic": 12_word_mnemonic,\n  "pairing": <shared_secret>/<pairing_index>/<256_bit_salt>,\n  "pin": 6_digit_pin\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "whisper-address": 20_byte_whisper_compatible_address, \n  "whisper-private-key": whisper_private_key, \n  "wallet-root-public-key": 256_bit_wallet_root_public_key, \n  "encryption-public-key": 256_bit_encryption_public_key,, \n  "wallet-root-address": 20_byte_wallet_root_address, \n  "whisper-public-key": 256_bit_whisper_public_key,\n  "address": 20_byte_address, \n  "wallet-address": 20_byte_wallet_address,, \n  "key-uid": 64_byte_unique_key_id, \n  "wallet-public-key": 256_bit_wallet_public_key,\n  "public-key": 256_bit_public_key,\n  "instance-uid": 32_byte_unique_instance_id,\n}\n')),(0,i.kt)("h3",{id:"5-get-a-set-of-generated-keys-get-keys"},"5. Get a set of generated keys (",(0,i.kt)("inlineCode",{parentName:"h3"},"/get-keys"),")"),(0,i.kt)("p",null,"To fetch the keys that are currently loaded on the keycard."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pairing": <shared_secret>/<pairing_index>/<256_bit_salt>,\n  "pin": 6_digit_pin\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "whisper-address": 20_byte_whisper_compatible_address, \n  "whisper-private-key": whisper_private_key, \n  "wallet-root-public-key": 256_bit_wallet_root_public_key, \n  "encryption-public-key": 256_bit_encryption_public_key,\n  "wallet-root-address": 20_byte_wallet_root_address, \n  "whisper-public-key": 256_bit_whisper_public_key,\n  "address": 20_byte_address, \n  "wallet-address": 20_byte_wallet_address, \n  "key-uid": 64_byte_unique_key_id, \n  "wallet-public-key": 256_bit_wallet_public_key,\n  "public-key": 256_bit_public_key,\n  "instance-uid": 32_byte_unique_instance_id,\n}\n')),(0,i.kt)("h3",{id:"6-sign-a-transaction-sign"},"6. Sign a transaction (",(0,i.kt)("inlineCode",{parentName:"h3"},"/sign"),")"),(0,i.kt)("p",null,"To sign a transaction using the keycard, passing in the pairing information and\nthe transaction to be signed."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "hash": 64_byte_hash_of_the_transaction,\n  "pairing": <shared_secret>/<pairing_index>/<256_bit_salt>,\n  "pin": 6_digit_pin,\n  "path": bip32_path_to_the_key\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"<256_bit_signature>\n")),(0,i.kt)("h3",{id:"7-export-a-key-export-key"},"7. Export a key (",(0,i.kt)("inlineCode",{parentName:"h3"},"/export-key"),")"),(0,i.kt)("p",null,"To export a key from the keycard, passing in the pairing information and\nthe path to the key to be exported."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pairing": <shared_secret>/<pairing_index>/<256_bit_salt>,\n  "pin": 6_digit_pin,\n  "path": bip32_path_to_the_key\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"<256_bit_public_key>\n")),(0,i.kt)("h3",{id:"8-verify-a-pin-verify-pin"},"8. Verify a pin (",(0,i.kt)("inlineCode",{parentName:"h3"},"/verify-pin"),")"),(0,i.kt)("p",null,"To verify the pin of the keycard."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "pin": 6_digit_pin\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"1_digit_status_code\n")),(0,i.kt)("p",null,"Status code reference:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"3: PIN is valid")),(0,i.kt)("h3",{id:"9-change-the-pin-change-pin"},"9. Change the pin (",(0,i.kt)("inlineCode",{parentName:"h3"},"/change-pin"),")"),(0,i.kt)("p",null,"To change the pin of the keycard."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "new-pin": 6_digit_new_pin,\n  "current-pin": 6_digit_new_pin,\n  "pairing": <shared_secret>/<pairing_index>/<256_bit_salt>\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("h4",{id:"if-the-operation-was-successful"},"If the operation was successful"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"true\n")),(0,i.kt)("h4",{id:"if-the-operation-was-unsuccessful"},"If the operation was unsuccessful"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"false\n")),(0,i.kt)("h3",{id:"10-unblock-the-keycard-unblock-pin"},"10. Unblock the keycard (",(0,i.kt)("inlineCode",{parentName:"h3"},"/unblock-pin"),")"),(0,i.kt)("p",null,"If the Keycard is blocked due to too many incorrect pin attempts,\nit can be unblocked using the PUK."),(0,i.kt)("p",null,"Request wire format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "puk": 12_digit_recovery_code,\n  "new-pin": 6_digit_new_pin,\n  "pairing": <shared_secret>/<pairing_index>/<256_bit_salt>\n}\n')),(0,i.kt)("p",null,"Response wire format"),(0,i.kt)("p",null,"If the operation was successful"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"true\n")),(0,i.kt)("p",null,"If the operation was unsuccessful"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"false\n")),(0,i.kt)("h2",{id:"flows"},"Flows"),(0,i.kt)("p",null,"Any application that uses the Status Keycard\nMAY implement the following flows according to the actions listed above."),(0,i.kt)("h3",{id:"1-a-new-user-wants-to-use-the-keycard-with-the-application"},"1. A new user wants to use the Keycard with the application"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The user initializes the Keycard using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/init-keycard")," endpoint."),(0,i.kt)("li",{parentName:"ol"},"The user pairs the Keycard with the client device using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/pair")," endpoint."),(0,i.kt)("li",{parentName:"ol"},"The user generates a new set of keys using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/generate-and-load-keys")," endpoint."),(0,i.kt)("li",{parentName:"ol"},"The user can now use the Keycard to sign transactions using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/sign")," endpoint.")),(0,i.kt)("h3",{id:"2-an-existing-user-wants-to-use-the-keycard-with-the-application"},"2. An existing user wants to use the Keycard with the application"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The user pairs the Keycard with the client device using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/pair")," endpoint."),(0,i.kt)("li",{parentName:"ol"},"The user can now use the Keycard to sign transactions using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/sign")," endpoint.")),(0,i.kt)("h3",{id:"3-an-existing-user-wants-to-use-the-keycard-with-a-new-client-device"},"3. An existing user wants to use the Keycard with a new client device"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The user pairs the Keycard with the new client device using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/pair")," endpoint."),(0,i.kt)("li",{parentName:"ol"},"The user can now use the Keycard to sign transactions using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/sign")," endpoint.")),(0,i.kt)("h3",{id:"4-an-existing-user-wishes-to-verify-the-pin-of-the-keycard"},"4. An existing user wishes to verify the pin of the Keycard"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The user verifies the pin of the Keycard using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/verify-pin")," endpoint.")),(0,i.kt)("h3",{id:"5-an-existing-user-wishes-to-change-the-pin-of-the-keycard"},"5. An existing user wishes to change the pin of the Keycard"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The user changes the pin of the Keycard using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/change-pin")," endpoint.")),(0,i.kt)("h3",{id:"6-an-existing-user-wishes-to-unblock-the-keycard"},"6. An existing user wishes to unblock the Keycard"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The user unblocks the Keycard using the ",(0,i.kt)("inlineCode",{parentName:"li"},"/unblock-pin")," endpoint.")),(0,i.kt)("h2",{id:"security-considerations"},"Security Considerations"),(0,i.kt)("p",null,"Inherits the security considerations of ",(0,i.kt)("a",{parentName:"p",href:"https://keycard.tech/docs/"},"Status Keycard")),(0,i.kt)("h2",{id:"privacy-considerations"},"Privacy Considerations"),(0,i.kt)("p",null,"Inherits the privacy considerations of ",(0,i.kt)("a",{parentName:"p",href:"https://keycard.tech/docs/"},"Status Keycard")),(0,i.kt)("h2",{id:"copyright"},"Copyright"),(0,i.kt)("p",null,"Copyright and related rights waived via ",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP-32 specification")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://keycard.tech/docs/"},"Keycard documentation")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://specs.status.im/draft/16"},"16/Keycard-Usage"))))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=i,k=u["".concat(o,".").concat(h)]||u[h]||d[h]||r;return n?a.createElement(k,s(s({ref:t},c),{},{components:n})):a.createElement(k,s({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);