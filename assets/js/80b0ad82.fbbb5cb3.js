"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[7709],{12505:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const s={title:"STATUS-SIMPLE-SCALING",name:"Status Simple Scaling",status:"raw",category:"Informational",description:"Describes how to scale Status Communities and Status 1-to-1 chats using Waku v2 protocol and components.",editor:"Daniel Kaiser &lt;danielkaiser@status.im&gt;",contributors:["Alvaro Revuelta &lt;alrevuelta@status.im&gt;"]},r=void 0,o={unversionedId:"raw/simple-scaling",id:"raw/simple-scaling",title:"STATUS-SIMPLE-SCALING",description:"Describes how to scale Status Communities and Status 1-to-1 chats using Waku v2 protocol and components.",source:"@site/status/raw/simple-scaling.md",sourceDirName:"raw",slug:"/raw/simple-scaling",permalink:"/status/raw/simple-scaling",draft:!1,tags:[],version:"current",frontMatter:{title:"STATUS-SIMPLE-SCALING",name:"Status Simple Scaling",status:"raw",category:"Informational",description:"Describes how to scale Status Communities and Status 1-to-1 chats using Waku v2 protocol and components.",editor:"Daniel Kaiser &lt;danielkaiser@status.im&gt;",contributors:["Alvaro Revuelta &lt;alrevuelta@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"Status RFCs",permalink:"/status/"},next:{title:"STATUS-MVDS-USAGE",permalink:"/status/raw/status-mvds"}},l={},p=[{value:"Abstract",id:"abstract",level:2},{value:"Background and Motivation",id:"background-and-motivation",level:2},{value:"Relay Shards",id:"relay-shards",level:2},{value:"Shard Allocation",id:"shard-allocation",level:3},{value:"Implementation Suggestion",id:"implementation-suggestion",level:4},{value:"Status Communities",id:"status-communities",level:3},{value:"Static Mapping",id:"static-mapping",level:4},{value:"Owner Mapping",id:"owner-mapping",level:4},{value:"1:1 Chat",id:"11-chat",level:3},{value:"Infrastructure Nodes",id:"infrastructure-nodes",level:2},{value:"Statically-Mapped Communities",id:"statically-mapped-communities",level:3},{value:"Owner-Mapped Communities",id:"owner-mapped-communities",level:3},{value:"1:1 chat",id:"11-chat-1",level:3},{value:"Infrastructure Shards",id:"infrastructure-shards",level:2},{value:"Control Message Shards",id:"control-message-shards",level:2},{value:"Media Shards",id:"media-shards",level:2},{value:"Infrastructure-focused Community",id:"infrastructure-focused-community",level:2},{value:"Light Protocols",id:"light-protocols",level:2},{value:"Waku Archive",id:"waku-archive",level:2},{value:"Discovery",id:"discovery",level:2},{value:"Libp2p Rendezvous and Circuit-Relay",id:"libp2p-rendezvous-and-circuit-relay",level:3},{value:"Announcing Shard Participation",id:"announcing-shard-participation",level:3},{value:"DoS Protection",id:"dos-protection",level:2},{value:"Design requirements (publisher)",id:"design-requirements-publisher",level:3},{value:"Design requirements (relay)",id:"design-requirements-relay",level:3},{value:"Required changes",id:"required-changes",level:3},{value:"Test vectors",id:"test-vectors",level:3},{value:"Owner Mapped Communities",id:"owner-mapped-communities-1",level:2},{value:"1 to 1 Chat",id:"1-to-1-chat",level:3},{value:"Security/Privacy Considerations",id:"securityprivacy-considerations",level:2},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2},{value:"Informative",id:"informative",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Status: raw"),(0,i.kt)("li",{parentName:"ul"},"Category: Informational"),(0,i.kt)("li",{parentName:"ul"},"Editor: Daniel Kaiser ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:danielkaiser@status.im"},"danielkaiser@status.im"),">"),(0,i.kt)("li",{parentName:"ul"},"Contributors:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Alvaro Revuelta ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:alrevuelta@status.im"},"alrevuelta@status.im"),">")))),(0,i.kt)("h2",{id:"abstract"},"Abstract"),(0,i.kt)("p",null,"This document describes how to scale\n",(0,i.kt)("a",{parentName:"p",href:"../56/communities"},"56/STATUS-COMMUNITIES")," as well as ",(0,i.kt)("a",{parentName:"p",href:"../55/1to1-chat"},"55/STATUS-1TO1-CHAT"),"\nusing Waku v2 protocol and components.\nIt also adds a few new aspects,\nwhere more sophisticated components are not yet researched and evaluated."),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note:")," (Parts of) this RFC will be deprecated in the future\nas we continue research to scale specific components\nin a way that aligns better with our principles of decentralization and\nprotecting anonymity.\nThis document informs about scaling at the current stage of research and\nshows it is practically possible.\nPractical feasibility is also a core goal for us.\nWe believe in incremental improvement, i.e.\nhaving a working decentralized scaling solution with trade-offs\nis better than a fully centralized solution."),(0,i.kt)("h2",{id:"background-and-motivation"},"Background and Motivation"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../56/communities"},"56/STATUS-COMMUNITIES")," as well as\n",(0,i.kt)("a",{parentName:"p",href:"../55/1to1-chat"},"55/STATUS-1TO1-CHAT")," use Waku v2 protocols.\nBoth use Waku content topics\n(see ",(0,i.kt)("a",{parentName:"p",href:"../../waku/informational/23/topics"},"23/WAKU2-TOPICS"),")\nfor content based filtering."),(0,i.kt)("p",null,"Waku v2 currently has scaling limitations in two dimensions:"),(0,i.kt)("p",null,"1) Messages that are part of a specific content topic\nhave to be disseminated in a single mesh network (i.e. pubsub topic).\nThis limits scaling the number of messages disseminated in a specific content topic,\nand by extension, the number of active nodes that are part of this content topic."),(0,i.kt)("p",null,"2) Scaling a large set of content topics requires distributing these over several\nmesh networks (which this document refers to as pubsub topic shards)."),(0,i.kt)("p",null,"This document focuses on the second scaling dimension.\nWith the scaling solutions discussed in this document,\neach content topics can have a large set of active users,\nbut still has to fit in a single pubsub mesh."),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note:")," While it is possible to use the same content topic name on several shards,\neach node that is interested in this content topic\nhas to be subscribed to all respective shards, which does not scale.\nSplitting content topics in a more sophisticated and\nefficient way will be part of a future document."),(0,i.kt)("h2",{id:"relay-shards"},"Relay Shards"),(0,i.kt)("p",null,"Sharding the ",(0,i.kt)("a",{parentName:"p",href:"../../waku/standards/core/11/relay"},"11/WAKU2-RELAY"),"\nnetwork is an integral part of scaling the Status app."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/relay-sharding.md"},"51/WAKU2-RELAY-SHARDING"),"\nspecifies shards clusters, which are sets of ",(0,i.kt)("inlineCode",{parentName:"p"},"1024")," shards\n(separate pubsub mesh networks).\nContent topics specified by application protocols can be distributed over these shards.\nThe Status app protocols are assigned to shard cluster ",(0,i.kt)("inlineCode",{parentName:"p"},"16"),",\nas defined in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/informational/relay-static-shard-alloc.md"},"WAKU2-RELAY-STATIC-SHARD-ALLOC"),"."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/relay-sharding.md"},"WAKU2-RELAY-SHARDING"),"\nspecifies three sharding methods.\nThis document uses ",(0,i.kt)("em",{parentName:"p"},"static sharding"),",\nwhich leaves the distribution of content topics to application protocols,\nbut takes care of shard discovery."),(0,i.kt)("p",null,"The 1024 shards within the main Status shard cluster are allocated as follows."),(0,i.kt)("h3",{id:"shard-allocation"},"Shard Allocation"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"shard index"),(0,i.kt)("th",{parentName:"tr",align:null},"usage"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"0 - 15"),(0,i.kt)("td",{parentName:"tr",align:null},"reserved")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"16 - 127"),(0,i.kt)("td",{parentName:"tr",align:null},"specific (large) communities")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"128 - 767"),(0,i.kt)("td",{parentName:"tr",align:null},"communities")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"768 - 895"),(0,i.kt)("td",{parentName:"tr",align:null},"1:1 chat")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"896 - 1023"),(0,i.kt)("td",{parentName:"tr",align:null},"media and control msgs")))),(0,i.kt)("p",null,"Shard indices are mapped to pubsub topic names as follows (specified in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/relay-sharding.md"},"WAKU2-RELAY-SHARDING"),")."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"/waku/2/rs/<cluster_id>/<shard_number>")),(0,i.kt)("p",null,"an example for the shard with index ",(0,i.kt)("inlineCode",{parentName:"p"},"18")," in the Status shard cluster:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"/waku/2/rs/16/18")),(0,i.kt)("p",null,"In other words, the mesh network with the pubsub topic name ",(0,i.kt)("inlineCode",{parentName:"p"},"/waku/2/rs/16/18"),",\ncarries messages associated with shard ",(0,i.kt)("inlineCode",{parentName:"p"},"18")," in the Status shard cluster."),(0,i.kt)("h4",{id:"implementation-suggestion"},"Implementation Suggestion"),(0,i.kt)("p",null,"The Waku implementation should offer an interface that\nallows Status nodes to subscribe to Status specific content topics like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'subscribe("/status/xyz", 16, 18)\n')),(0,i.kt)("p",null,"The shard cluster index ",(0,i.kt)("inlineCode",{parentName:"p"},"16")," can be kept in the Status app configuration,\nso that Status nodes can simply use"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'subscribe("/status/xyz", 18)\n')),(0,i.kt)("p",null,"which means: connect to the ",(0,i.kt)("inlineCode",{parentName:"p"},'"status/xyz"')," content topic on shard ",(0,i.kt)("inlineCode",{parentName:"p"},"18"),"\nwithin the Status shard cluster."),(0,i.kt)("h3",{id:"status-communities"},"Status Communities"),(0,i.kt)("p",null,"In order to associate a community with a shard,\nthe community description protobuf is extended by the field\n",(0,i.kt)("inlineCode",{parentName:"p"},"uint16 relay_shard_index = 15"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},'\nsyntax = "proto3";\n\nmessage CommunityDescription {\n  // The Lamport timestamp of the message\n  uint64 clock = 1;\n  // A mapping of members in the community to their roles\n  map<string,CommunityMember> members = 2;\n  // The permissions of the Community\n  CommunityPermissions permissions = 3;\n  // The metadata of the Community\n  ChatIdentity identity = 5;\n  // A mapping of chats to their details\n  map<string,CommunityChat> chats = 6;\n  // A list of banned members\n  repeated string ban_list = 7;\n  // A mapping of categories to their details\n  map<string,CommunityCategory> categories = 8;\n  // The admin settings of the Community\n  CommunityAdminSettings admin_settings = 10;\n  // If the community is encrypted\n  bool encrypted = 13;\n  // The list of tags\n  repeated string tags = 14;\n  // index of the community\'s shard within the Status shard cluster\n  uint16 relay_shard_index = 15\n}\n')),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note"),": Currently, Status app has allocated shared cluster ",(0,i.kt)("inlineCode",{parentName:"p"},"16")," in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/informational/relay-static-shard-alloc.md"},"52/WAKU2-RELAY-STATIC-SHARD-ALLOC"),".\nStatus app could allocate more shard clusters, for instance to establish a test net.\nWe could add the shard cluster index to the community description as well.\nThe recommendation for now,\nis to keep it as a configuration option of the Status app.\n",">"," ",(0,i.kt)("em",{parentName:"p"},"Note"),": Once this RFC moves forward,\nthe new community description protobuf fields should be mentioned in ",(0,i.kt)("a",{parentName:"p",href:"../56/communities"},"56/STATUS-COMMUNITIES"),"."),(0,i.kt)("p",null,"Status communities can be mapped to shards in two ways: static, and owner-based."),(0,i.kt)("h4",{id:"static-mapping"},"Static Mapping"),(0,i.kt)("p",null,"With static mapping,\ncommunities are assigned a specific shard index within the Status shard cluster.\nThis mapping is similar in nature to the shard cluster allocation in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/informational/relay-static-shard-alloc.md"},"WAKU2-RELAY-STATIC-SHARD-ALLOC"),".\nShard indices allocated in that way are in the range ",(0,i.kt)("inlineCode",{parentName:"p"},"16 - 127"),".\nThe Status CC community uses index ",(0,i.kt)("inlineCode",{parentName:"p"},"16"),"\n(not to confuse with shard cluster index ",(0,i.kt)("inlineCode",{parentName:"p"},"16"),", which is the Status shard cluster)."),(0,i.kt)("h4",{id:"owner-mapping"},"Owner Mapping"),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note"),": This way of mapping will be specified post-MVP."),(0,i.kt)("p",null,"Community owners can choose to map their communities to any shard within\nthe index range ",(0,i.kt)("inlineCode",{parentName:"p"},"128 - 767"),"."),(0,i.kt)("h3",{id:"11-chat"},"1:1 Chat"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../55/1to1-chat"},"55/STATUS-1TO1-CHAT"),"\nuses partitioned topics to map 1:1 chats to a set of 5000 content topics.\nThis document extends this mapping to 8192 content topics that are, in turn,\nmapped to 128 shards in the index range of ",(0,i.kt)("inlineCode",{parentName:"p"},"768 - 895"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'contentPartitionsNum = 8192\ncontentPartition = mod(publicKey, contentPartitionsNum)\npartitionContentTopic = "contact-discovery-" + contentPartition\n\npartitionContentTopic = keccak256(partitionContentTopic)\n\nshardNum = 128\nshardIndex = 768 + mod(publicKey, shardNum)\n\n')),(0,i.kt)("h2",{id:"infrastructure-nodes"},"Infrastructure Nodes"),(0,i.kt)("p",null,"As described in ",(0,i.kt)("a",{parentName:"p",href:"../../waku/informational/30/adaptive-nodes"},"30/ADAPTIVE-NODES"),",\nWaku supports a continuum of node types with respect to available resources.\nInfrastructure nodes are powerful nodes that have a high bandwidth connection and\na high up-time."),(0,i.kt)("p",null,"This document, which informs about simple ways of scaling Status over Waku,\nassumes the presence of a set of such infrastructure nodes in each shard.\nInfrastructure nodes are especially important for\nproviding connectivity in the roll-out phase."),(0,i.kt)("p",null,"Infrastructure nodes are not limited to Status fleets, or\nnodes run by community owners.\nAnybody can run infrastructure nodes."),(0,i.kt)("h3",{id:"statically-mapped-communities"},"Statically-Mapped Communities"),(0,i.kt)("p",null,"Infrastructure nodes are provided by the community owner,\nor by members of the respective community."),(0,i.kt)("h3",{id:"owner-mapped-communities"},"Owner-Mapped Communities"),(0,i.kt)("p",null,"Infrastructure nodes are part of a subset of the shards in the range ",(0,i.kt)("inlineCode",{parentName:"p"},"128 - 767"),".\nRecommendations on choosing this subset will be added\nin a future version of this document."),(0,i.kt)("p",null,"Status fleet nodes make up a part of these infrastructure nodes."),(0,i.kt)("h3",{id:"11-chat-1"},"1:1 chat"),(0,i.kt)("p",null,"Infrastructure nodes are part of a subset of the shards in the range ",(0,i.kt)("inlineCode",{parentName:"p"},"768 - 985"),"\n(similar to owner-mapped communities).\nRecommendations on choosing this subset will be added\nin a future version of this document."),(0,i.kt)("p",null,"Desktop clients can choose to only use filter and lightpush."),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note"),": Discussion: I'd suggest to set this as the default for the MVP.\nThe load on infrastructure nodes would not be higher, because\nthey have to receive and relay each message anyways.\nThis comes as a trade-off to anonymity and decentralization,\nbut can significantly improve scaling.\nWe still have k-anonymity because\nseveral chat pairs are mapped into one content topic.\nWe could improve on this in the future, and research the applicability of PIR\n(private information retrieval) techniques in the future."),(0,i.kt)("h2",{id:"infrastructure-shards"},"Infrastructure Shards"),(0,i.kt)("p",null,"Waku messages are typically relayed in larger mesh networks\ncomprised of nodes with varying resource profiles\n(see ",(0,i.kt)("a",{parentName:"p",href:"../../waku/informational/30/adaptive-nodes"},"30/ADAPTIVE-NODES"),").\nTo maximise scaling, relaying of specific message types can be dedicated to shards\nwhere only infrastructure nodes with very strong resource profiles relay messages.\nThis comes as a trade-off to decentralization."),(0,i.kt)("h2",{id:"control-message-shards"},"Control Message Shards"),(0,i.kt)("p",null,"To get the maximum scaling for select large communities for the Status scaling MVP,\nspecific control messages that cause significant load\n(at a high user number) SHOULD be moved to a separate control message shard.\nThese control messages comprise:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"community description"),(0,i.kt)("li",{parentName:"ul"},"membership update"),(0,i.kt)("li",{parentName:"ul"},"backup"),(0,i.kt)("li",{parentName:"ul"},"community request to join response"),(0,i.kt)("li",{parentName:"ul"},"sync profile picture")),(0,i.kt)("p",null,"The relay functionality of control messages shards SHOULD\nbe provided by infrastructure nodes.\nDesktop clients should use light protocols as the default for control message shards.\nStrong Desktop clients MAY opt in to support the relay network."),(0,i.kt)("p",null,"Each large community (in the index range of ",(0,i.kt)("inlineCode",{parentName:"p"},"16 - 127"),")\ncan get its dedicated control message shard\n(in the index range ",(0,i.kt)("inlineCode",{parentName:"p"},"896 - 1023"),") if deemed necessary.\nThe Status CC community uses shard ",(0,i.kt)("inlineCode",{parentName:"p"},"896")," as its control message shard.\nThis comes with trade-offs to decentralization and anonymity\n(see ",(0,i.kt)("em",{parentName:"p"},"Security Considerations")," section)."),(0,i.kt)("h2",{id:"media-shards"},"Media Shards"),(0,i.kt)("p",null,"Similar to control messages, media-heavy communities should use separate media shards\n(in the index range ",(0,i.kt)("inlineCode",{parentName:"p"},"896 - 1023"),") for disseminating messages with large media data.\nThe Status CC community uses shard ",(0,i.kt)("inlineCode",{parentName:"p"},"897")," as its media shard."),(0,i.kt)("h2",{id:"infrastructure-focused-community"},"Infrastructure-focused Community"),(0,i.kt)("p",null,"Large communities MAY choose to mainly rely on infrastructure nodes\nfor ",(0,i.kt)("em",{parentName:"p"},"all")," message transfers (not limited to control, and media messages).\nDesktop clients of such communities should use light protocols as the default.\nStrong Desktop clients MAY opt in to support the relay network."),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note"),": This is not planned for the MVP."),(0,i.kt)("h2",{id:"light-protocols"},"Light Protocols"),(0,i.kt)("p",null,"Light protocols may be used to save bandwidth,\nat the (global) cost of not contributing to the network.\nUsing light protocols is RECOMMENDED for resource restricted nodes,\ne.g. browsers,\nand devices that (temporarily)\nhave a low bandwidth connection or a connection with usage-based billing."),(0,i.kt)("p",null,"Light protocols comprise"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/standards/core/19/lightpush"},"19/WAKU2-LIGHTPUSH")," for sending messages"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/standards/core/12/filter"},"12/WAKU2-FILTER"),"\nfor requesting messages with specific attributes"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/peer-exchange/peer-exchange.md"},"WAKU2-PEER-EXCHANGE"),"\nfor discovering peers")),(0,i.kt)("h2",{id:"waku-archive"},"Waku Archive"),(0,i.kt)("p",null,"Archive nodes are Waku nodes that offer the Waku archive service via\nthe Waku store protocol (",(0,i.kt)("a",{parentName:"p",href:"../../waku/standards/core/13/store"},"13/WAKU2-STORE"),").\nThey are part of a set of shards and store all messages disseminated in these shards.\nNodes can request history messages via the ",(0,i.kt)("a",{parentName:"p",href:"../../waku/standards/core/13/store"},"13/WAKU2-STORE"),"."),(0,i.kt)("p",null,"The store service is not limited to a Status fleet.\nAnybody can run a Waku Archive node in the Status shards."),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note"),": There is no specification for discovering archive nodes\nassociated with specific shards yet.\nNodes expect archive nodes to store all messages, regardless of shard association."),(0,i.kt)("p",null,"The recommendation for the allocation of archive nodes to shards is similar to the\nallocation of infrastructure nodes to shards described above.\nIn fact, the archive service can be offered by infrastructure nodes."),(0,i.kt)("h2",{id:"discovery"},"Discovery"),(0,i.kt)("p",null,"Shard discovery is covered by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/relay-sharding.md"},"WAKU2-RELAY-SHARDING"),".\nThis allows the Status app to abstract from the discovery process and\nsimply address shards by their index."),(0,i.kt)("h3",{id:"libp2p-rendezvous-and-circuit-relay"},"Libp2p Rendezvous and Circuit-Relay"),(0,i.kt)("p",null,"To make nodes behind restrictive NATs discoverable,\nthis document suggests using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/master/rendezvous/README.md"},"libp2p rendezvous"),".\nNodes can check whether they are behind a restrictive NAT using the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/master/autonat/README.md"},"libp2p AutoNAT protocol"),"."),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note:")," The following will move into ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/relay-sharding.md"},"WAKU2-RELAY-SHARDING"),",\nor ",(0,i.kt)("a",{parentName:"p",href:"../../waku/standards/core/33/discv5"},"33/WAKU2-DISCV5"),":\nNodes behind restrictive NATs SHOULD not announce their publicly unreachable address\nvia ",(0,i.kt)("a",{parentName:"p",href:"../../waku/standards/core/33/discv5"},"33/WAKU2-DISCV5")," discovery."),(0,i.kt)("p",null,"It is RECOMMENDED that nodes that are part of the relay network also\nact as rendezvous points.\nThis includes accepting register queries from peers,\nas well as answering rendezvous discover queries.\nNodes MAY opt-out of the rendezvous functionality."),(0,i.kt)("p",null,"To allow nodes to initiate connections to peers behind restrictive NATs\n(after discovery via rendezvous),\nit is RECOMMENDED that nodes that are part of the Waku relay network also offer\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/6634ca7abb2f955645243d48d1cd2fd02a8e8880/relay/circuit-v2.md"},"libp2p circuit relay"),"\nfunctionality."),(0,i.kt)("p",null,"To minimize the load on circuit-relay nodes, nodes SHOULD"),(0,i.kt)("p",null,"1) make use of the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/6634ca7abb2f955645243d48d1cd2fd02a8e8880/relay/circuit-v2.md#reservation"},"limiting"),"\nfunctionality offered by the libp2p circuit relay protocols, and\n2) use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/master/relay/DCUtR.md"},"DCUtR"),"\nto upgrade to a direct connection."),(0,i.kt)("p",null,"Nodes that do not announce themselves at all and only plan to use light protocols,\nMAY use rendezvous discovery instead of or along-side ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/peer-exchange/peer-exchange.md"},"WAKU2-PEER-EXCHANGE"),".\nFor these nodes, rendezvous and\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/peer-exchange/peer-exchange.md"},"WAKU2-PEER-EXCHANGE"),"\noffer the same functionality,\nbut return node sets sampled in different ways.\nUsing both can help increasing connectivity."),(0,i.kt)("p",null,"Nodes that are not behind restrictive NATs MAY register at rendezvous points, too;\nthis helps increasing discoverability, and by extension connectivity.\nSuch nodes SHOULD, however, not register at circuit relays."),(0,i.kt)("h3",{id:"announcing-shard-participation"},"Announcing Shard Participation"),(0,i.kt)("p",null,"Registering a namespace via ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/master/rendezvous/README.md#interaction"},"lib-p2p rendezvous"),"\nis done via a register query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rs"},"REGISTER{my-app, {QmA, AddrA}}\n")),(0,i.kt)("p",null,"The app name, ",(0,i.kt)("inlineCode",{parentName:"p"},"my-app")," contains the encoding of a single shard in string form:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rs"},'"rs/"| to_string(<2-byte shard cluster index>) | "/" | to_string(<2-byte shard index>)\n')),(0,i.kt)("p",null,"The string conversion SHOULD remove leading zeros."),(0,i.kt)("p",null,">"," ",(0,i.kt)("em",{parentName:"p"},"Note:")," Since the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/libp2p/specs/blob/master/rendezvous/README.md#protobuf"},"ns"),"\nfield is of type string, a more efficient byte encoding is not utilized."),(0,i.kt)("p",null,"Registering shard 2 in the Status shard cluster (with shard cluster index 16,\nsee ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/informational/relay-static-shard-alloc.md"},"WAKU2-RELAY-STATIC-SHARD-ALLOC"),",\nthe register query would look like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rs"},'REGISTER{"rs/16/2", {QmA, AddrA}}\n')),(0,i.kt)("p",null,"Participation in further shards is registered with further queries;\none register query per shard."),(0,i.kt)("p",null,"A discovery query for nodes that are part of this shard would look like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rs"},'DISCOVER{ns: "rs/16/2"}\n')),(0,i.kt)("h2",{id:"dos-protection"},"DoS Protection"),(0,i.kt)("p",null,'Hereunder we describe the "opt-in message signing for DoS prevention" solution,\ndesigned ',(0,i.kt)("em",{parentName:"p"},"ad hoc")," for Status MVP."),(0,i.kt)("p",null,"Since publishing messages to pubsub topics has no limits,\nanyone can publish messages at a very high rate and DoS the network.\nThis would elevate the bandwidth consumption of all nodes subscribed\nto said pubsub topic, making it prohibitive (in terms of bandwidth)\nto be subscribed to it.\nIn order to scale, we need some mechanism to prevent this from happening,\notherwise all scaling efforts will be in vain.\nSince RLN is not ready yet,\nhereunder we describe a simpler approach designed ",(0,i.kt)("em",{parentName:"p"},"ad hoc")," for Status use case,\nfeasible to implement for the MVP and\nthat validates some of the ideas that will evolve to solutions such as RLN."),(0,i.kt)("p",null,"With this approach, certain pubsub topics can be optionally configured\nto only accept messages signed with a given key,\nthat only trusted entities know.\nThis key can be pre-shared among a set of participants,\nthat are trusted to make fair usage of the network,\npublishing messages at a reasonable rate/size.\nNote that this key can be shared/reused among multiple participants, and\nonly one key is whitelisted per pubsub topic.\nThis is an opt-in solution that operators can choose to deploy in their shards\n(i.e. pubsub topics), but it's not enforced in the default one.\nOperators can freely choose how they want to generate, and\ndistribute the public keys.\nIt's also their responsibility to handle the private key,\nsharing it with only trusted parties and keeping proper custody of it."),(0,i.kt)("p",null,"The following concepts are introduced:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic"),": A private key of 32 bytes,\nthat allows the holder to sign messages and it's mapped to a ",(0,i.kt)("inlineCode",{parentName:"li"},"protected-pubsub-topic"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"app-message-hash"),": Application ",(0,i.kt)("inlineCode",{parentName:"li"},"WakuMessage")," hash,\ncalculated as ",(0,i.kt)("inlineCode",{parentName:"li"},"sha256(concat(pubsubTopic, payload, contentTopic, timestamp, ephemeral))"),"\nwith all elements in bytes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"message-signature"),": ECDSA signature of ",(0,i.kt)("inlineCode",{parentName:"li"},"application-message-hash"),"\nusing a given ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic"),", 64 bytes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"public-key-topic"),": The equivalent public key of ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"protected-pubsub-topic"),": Pubsub topic that only accepts messages\nthat were signed with ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic"),",\nwhere ",(0,i.kt)("inlineCode",{parentName:"li"},"verify(message-signature, app-message-hash, public-key-topic)"),"\nis only correct if the ",(0,i.kt)("inlineCode",{parentName:"li"},"message-signature")," was produced by ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic"),".\nSee ECDSA signature verification algorithm.")),(0,i.kt)("p",null,"This solution introduces two roles:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Publisher: A node that knows the ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic")," associated to ",(0,i.kt)("inlineCode",{parentName:"li"},"public-key-topic"),",\nthat can publish messages with a valid ",(0,i.kt)("inlineCode",{parentName:"li"},"message-signature")," that are accepted and\nrelayed by the nodes implementing this feature."),(0,i.kt)("li",{parentName:"ul"},"Relayer: A node that knows the ",(0,i.kt)("inlineCode",{parentName:"li"},"public-key-topic"),",\nwhich can be used to verify if the messages were signed with the equivalent ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic"),".\nIt allows distinguishing valid from invalid messages\nwhich protect the node against DoS attacks,\nassuming that the users of the key send messages of a reasonable size and rate.\nNote that a node can validate messages and\nrelay them or not without knowing the private key.")),(0,i.kt)("h3",{id:"design-requirements-publisher"},"Design requirements (publisher)"),(0,i.kt)("p",null,"A publisher that wants to send messages\nthat are relayed in the network for a given ",(0,i.kt)("inlineCode",{parentName:"p"},"protected-pubsub-topic")," shall:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"be able to sign messages with the ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic")," configured for that topic,\nproducing a ECDSA signature of 64 bytes using\ndeterministic signing complying with RFC 6979."),(0,i.kt)("li",{parentName:"ul"},"include the signature of the ",(0,i.kt)("inlineCode",{parentName:"li"},"app-message-hash")," (",(0,i.kt)("inlineCode",{parentName:"li"},"message-signature"),")\nthat wishes to send in the ",(0,i.kt)("inlineCode",{parentName:"li"},"WakuMessage")," ",(0,i.kt)("inlineCode",{parentName:"li"},"meta")," field.")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"app-message-hash")," of the message shall be calculated as the ",(0,i.kt)("inlineCode",{parentName:"p"},"sha256")," hash\nof the following fields of the message:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rs"},"sha256(concat(pubsubTopic, payload, contentTopic, timestamp, ephemeral))\n")),(0,i.kt)("p",null,"Where fields are serialized into bytes using little-endian.\nNote that ",(0,i.kt)("inlineCode",{parentName:"p"},"ephemeral")," is a boolean that is serialized to ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," if ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"1")," if ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("h3",{id:"design-requirements-relay"},"Design requirements (relay)"),(0,i.kt)("p",null,"Requirements for the relay are listed below:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A valid ",(0,i.kt)("inlineCode",{parentName:"li"},"protected-pubsub-topic")," shall be configured with a ",(0,i.kt)("inlineCode",{parentName:"li"},"public-key-topic"),",\n(derived from a ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic"),").\nNote that the relay does not need to know the private key.\nFor simplicity, there is just one key per topic.\nSince this approach has clear privacy implications,\nthis configuration is not part of the waku protocol, but of the application.")),(0,i.kt)("p",null,"Requirements on the gossipsub validator:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Relay nodes should use the existing gossipsub validators that allow to ",(0,i.kt)("inlineCode",{parentName:"li"},"Accept"),"\nor ",(0,i.kt)("inlineCode",{parentName:"li"},"Reject")," messages, according to the following criteria:"),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," is not set (equals to 0) then ",(0,i.kt)("inlineCode",{parentName:"li"},"Reject")," the message."),(0,i.kt)("li",{parentName:"ul"},"If the ",(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," is ",(0,i.kt)("inlineCode",{parentName:"li"},"abs(current_timestamp-timestamp) > MessageWindowInSec"),"\nthen ",(0,i.kt)("inlineCode",{parentName:"li"},"Reject")," the message."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"meta")," is empty, ",(0,i.kt)("inlineCode",{parentName:"li"},"Reject")," the message."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"meta")," exists but its size is different than 64 bytes, ",(0,i.kt)("inlineCode",{parentName:"li"},"Reject")," the message."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"meta")," does not successfully verifies according to the ECDSA signature\nverification algorithm using ",(0,i.kt)("inlineCode",{parentName:"li"},"public-key-topic")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"app-message-hash"),",\nthen ",(0,i.kt)("inlineCode",{parentName:"li"},"Reject")," the message."),(0,i.kt)("li",{parentName:"ul"},"If and only if all above conditions are met then ",(0,i.kt)("inlineCode",{parentName:"li"},"Accept")," the message.")),(0,i.kt)("p",null,"Other requirements:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The node shall keep metrics on the messages validation output,\n",(0,i.kt)("inlineCode",{parentName:"li"},"Accept")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"Reject"),"."),(0,i.kt)("li",{parentName:"ul"},"(Optional). To further strengthen DoS protection,\ngossipsub ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md#extended-validators"},"scoring"),"\ncan be used to trigger disconnections from peers sending multiple invalid messages.\nSee ",(0,i.kt)("inlineCode",{parentName:"li"},"P4")," penalty.\nThis protects each peer from DoS,\nsince this score is used to trigger disconnections from nodes attempting to DoS them.")),(0,i.kt)("h3",{id:"required-changes"},"Required changes"),(0,i.kt)("p",null,"This solution is designed to be backward compatible so\nthat nodes validating messages can coexist in the same topic\nwith other nodes that don't perform validation.\nBut note that only nodes that perform message validation\nwill be protected against DoS.\nNodes wishing to opt-in this DoS protection feature shall:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Generate a ",(0,i.kt)("inlineCode",{parentName:"li"},"private-key-topic")," and distribute it to a curated list of users,\nthat are trusted to send messages at a reasonable rate."),(0,i.kt)("li",{parentName:"ul"},"Redeploy the nodes, adding a new configuration\nwhere a ",(0,i.kt)("inlineCode",{parentName:"li"},"protected-pubsub-topic")," is configured with a ",(0,i.kt)("inlineCode",{parentName:"li"},"public-key-topic"),",\nused to verify the messages being relayed.")),(0,i.kt)("h3",{id:"test-vectors"},"Test vectors"),(0,i.kt)("p",null,"Relay nodes complying with this specification\nshall accept the following message in the configured pubsub topic."),(0,i.kt)("p",null,"Given the following key pair:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"private-key-topic = 5526a8990317c9b7b58d07843d270f9cd1d9aaee129294c1c478abf7261dd9e6\npublic-key-topic = 049c5fac802da41e07e6cdf51c3b9a6351ad5e65921527f2df5b7d59fd9b56ab02bab736cdcfc37f25095e78127500da371947217a8cd5186ab890ea866211c3f6\n")),(0,i.kt)("p",null,"And the following message to send:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"protected-pubsub-topic = pubsub-topic\ncontentTopic = content-topic\npayload = 1A12E077D0E89F9CAC11FBBB6A676C86120B5AD3E248B1F180E98F15EE43D2DFCF62F00C92737B2FF6F59B3ABA02773314B991C41DC19ADB0AD8C17C8E26757B\ntimestamp = 1683208172339052800\nephemeral = true\n")),(0,i.kt)("p",null,"The message hash and meta (aka signature) are calculated as follows."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"app-message-hash = 662F8C20A335F170BD60ABC1F02AD66F0C6A6EE285DA2A53C95259E7937C0AE9\nmessage.meta = 127FA211B2514F0E974A055392946DC1A14052182A6ABEFB8A6CD7C51DA1BF2E40595D28EF1A9488797C297EED3AAC45430005FB3A7F037BDD9FC4BD99F59E63\n")),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"message.meta"),", the relay node shall calculate the ",(0,i.kt)("inlineCode",{parentName:"p"},"app-message-hash"),"\nof the received message using ",(0,i.kt)("inlineCode",{parentName:"p"},"public-key-topic"),",\nand with the values above, the signature should be verified,\nmaking the node ",(0,i.kt)("inlineCode",{parentName:"p"},"Accept")," the message and relaying it to other nodes in the network."),(0,i.kt)("h2",{id:"owner-mapped-communities-1"},"Owner Mapped Communities"),(0,i.kt)("p",null,"Basic idea:\nTokenized load."),(0,i.kt)("h3",{id:"1-to-1-chat"},"1 to 1 Chat"),(0,i.kt)("p",null,"An idea we plan to explore in the future:\nMap 1:1 chats to community shards, if both A and B are part of the respective community.\nThis increases k-anonymity and benefits from community DoS protection.\nIt could be rate-limited with RLN."),(0,i.kt)("h2",{id:"securityprivacy-considerations"},"Security/Privacy Considerations"),(0,i.kt)("p",null,"This document makes several trade-offs to privacy and anonymity.\nTodo: elaborate.\nSee ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/waku-org/specs/blob/waku-RFC/informational/adversarial-models.md"},"WAKU2-ADVERSARIAL-MODELS"),"\nfor information on Waku Anonymity."),(0,i.kt)("h2",{id:"copyright"},"Copyright"),(0,i.kt)("p",null,"Copyright and related rights waived via ",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../56/communities"},"56/STATUS-COMMUNITIES")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../55/1to1-chat"},"55/STATUS-1TO1-CHAT")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/informational/23/topics"},"23/WAKU2-TOPICS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/standards/core/11/relay"},"11/WAKU2-RELAY")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/relay-sharding.md"},"WAKU2-RELAY-SHARDING")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/waku-org/specs/blob/waku-RFC/informational/relay-static-shard-alloc.md"},"WAKU2-RELAY-STATIC-SHARD-ALLOC")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/informational/30/adaptive-nodes"},"30/ADAPTIVE-NODES")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/standards/core/19/lightpush"},"19/WAKU2-LIGHTPUSH")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/standards/core/12/filter"},"12/WAKU2-FILTER")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/peer-exchange/peer-exchange.md"},"WAKU2-PEER-EXCHANGE")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/standards/core/13/store"},"13/WAKU2-STORE")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/master/rendezvous/README.md"},"libp2p rendezvous")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/master/autonat/README.md"},"libp2p AutoNAT protocol")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../waku/standards/core/33/discv5"},"33/WAKU2-DISCV5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/6634ca7abb2f955645243d48d1cd2fd02a8e8880/relay/circuit-v2.md"},"libp2p circuit relay")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/6634ca7abb2f955645243d48d1cd2fd02a8e8880/relay/circuit-v2.md#reservation"},"limiting")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/master/relay/DCUtR.md"},"DCUtR")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/libp2p/specs/blob/master/pubsub/gossipsub/gossipsub-v1.1.md#extended-validators"},"scoring")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.libp2p.io/concepts/nat/circuit-relay/"},"Circuit Relay")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/waku-org/specs/blob/waku-RFC/informational/adversarial-models.md"},"WAKU2-ADVERSARIAL-MODELS"))),(0,i.kt)("h2",{id:"informative"},"Informative"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.libp2p.io/concepts/nat/circuit-relay/"},"Circuit Relay")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/waku-org/specs/blob/waku-RFC/standards/core/enr.md"},"WAKU2-ENR"))))}u.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=i,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return a?n.createElement(h,r(r({ref:t},c),{},{components:a})):n.createElement(h,r({ref:t},c))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=a.length,r=new Array(s);r[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<s;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);