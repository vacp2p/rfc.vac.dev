"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[462],{47848:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={title:"ETH-MLS-OFFCHAIN",name:"Secure channel setup using decentralized MLS and Ethereum accounts",status:"raw",category:"Standards Track",editor:"Ugur Sen [ugur@status.im](mailto:ugur@status.im)",contributors:"seemenkina [ekaterina@status.im](mailto:ekaterina@status.im)"},o=void 0,s={unversionedId:"raw/eth-mls-offchain",id:"raw/eth-mls-offchain",title:"ETH-MLS-OFFCHAIN",description:"- Status: raw",source:"@site/vac/raw/eth-mls-offchain.md",sourceDirName:"raw",slug:"/raw/eth-mls-offchain",permalink:"/vac/raw/eth-mls-offchain",draft:!1,tags:[],version:"current",frontMatter:{title:"ETH-MLS-OFFCHAIN",name:"Secure channel setup using decentralized MLS and Ethereum accounts",status:"raw",category:"Standards Track",editor:"Ugur Sen [ugur@status.im](mailto:ugur@status.im)",contributors:"seemenkina [ekaterina@status.im](mailto:ekaterina@status.im)"},sidebar:"defaultSidebar",previous:{title:"ETH-DCGKA",permalink:"/vac/raw/decentralized-messaging-ethereum"},next:{title:"ETH-MLS-ONCHAIN",permalink:"/vac/raw/eth-mls-onchain"}},l={},p=[{value:"Abstract",id:"abstract",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Format Specification",id:"format-specification",level:2},{value:"Assumptions",id:"assumptions",level:3},{value:"Roles",id:"roles",level:2},{value:"MLS Background",id:"mls-background",level:2},{value:"MLS Services",id:"mls-services",level:3},{value:"MLS Objects",id:"mls-objects",level:3},{value:"de-MLS Objects",id:"de-mls-objects",level:3},{value:"Flow",id:"flow",level:2},{value:"Creating Voting Proposal",id:"creating-voting-proposal",level:2},{value:"Creating welcome message",id:"creating-welcome-message",level:2},{value:"Single steward",id:"single-steward",level:2},{value:"Multi stewards",id:"multi-stewards",level:2},{value:"Multi steward with single consensus",id:"multi-steward-with-single-consensus",level:3},{value:"Multi steward with two consensuses",id:"multi-steward-with-two-consensuses",level:3},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:3}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Status: raw"),(0,i.kt)("li",{parentName:"ul"},"Category: Standards Track"),(0,i.kt)("li",{parentName:"ul"},"Editor: Ugur Sen ",(0,i.kt)("a",{parentName:"li",href:"mailto:ugur@status.im"},"ugur@status.im"))),(0,i.kt)("h2",{id:"abstract"},"Abstract"),(0,i.kt)("p",null,"The following document specifies Ethereum authenticated scalable\nand decentralized secure group messaging application by\nintegrating Message Layer Security (MLS) backend.\nDecentralization refers each user is a node in P2P network and\neach user has voice for any changes in group.\nThis is achieved by integrating a consensus mechanism.\nLastly, this RFC can also be referred to as de-MLS,\ndecentralized MLS, to emphasize its deviation\nfrom the centralized trust assumptions of traditional MLS deployments."),(0,i.kt)("h2",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"Group messaging is a fundamental part of digital communication,\nyet most existing systems depend on centralized servers,\nwhich introduce risks around privacy, censorship, and unilateral control.\nIn restrictive settings, servers can be blocked or surveilled;\nin more open environments, users still face opaque moderation policies,\ndata collection, and exclusion from decision-making processes.\nTo address this, we propose a decentralized, scalable peer-to-peer\ngroup messaging system where each participant runs a node, contributes\nto message propagation, and takes part in governance autonomously.\nGroup membership changes are decided collectively through a lightweight\npartially synchronous, fault-tolerant consensus protocol without a centralized identity.\nThis design enables truly democratic group communication and is well-suited\nfor use cases like activist collectives, research collaborations, DAOs, support groups,\nand decentralized social platforms."),(0,i.kt)("h2",{id:"format-specification"},"Format Specification"),(0,i.kt)("p",null,"The key words \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d,\n\u201cSHOULD\u201d, \u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cMAY\u201d, and \u201cOPTIONAL\u201d in this document\nare to be interpreted as described in ",(0,i.kt)("a",{parentName:"p",href:"https://www.ietf.org/rfc/rfc2119.txt"},"2119"),"."),(0,i.kt)("h3",{id:"assumptions"},"Assumptions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The nodes in the P2P network can discover other nodes or will connect to other nodes when subscribing to same topic in a gossipsub."),(0,i.kt)("li",{parentName:"ul"},"We MAY have non-reliable (silent) nodes."),(0,i.kt)("li",{parentName:"ul"},"We MUST have a consensus that is lightweight, scalable and finalized in a specific time.")),(0,i.kt)("h2",{id:"roles"},"Roles"),(0,i.kt)("p",null,"The three roles used in de-MLS is as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"node"),": Nodes are members of network without being in any secure group messaging."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"member"),": Members are special nodes in the secure group messaging who\nobtains current group key of secure group messaging."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"steward"),": Stewards are special and transparent members in secure group\nmessaging who organizes the changes upon the voted-proposals.")),(0,i.kt)("h2",{id:"mls-background"},"MLS Background"),(0,i.kt)("p",null,"The de-MLS consists of MLS backend, so the MLS services and other MLS components\nare taken from the original ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS specification"),", with or without modifications."),(0,i.kt)("h3",{id:"mls-services"},"MLS Services"),(0,i.kt)("p",null,"MLS is operated in two services authentication service (AS) and delivery service (DS).\nAuthentication service enables group members to authenticate the credentials presented by other group members.\nThe delivery service routes MLS messages among the nodes or\nmembers in the protocol in the correct order and\nmanage the ",(0,i.kt)("inlineCode",{parentName:"p"},"keyPackage")," of the users where the ",(0,i.kt)("inlineCode",{parentName:"p"},"keyPackage")," is the objects\nthat provide some public information about a user."),(0,i.kt)("h3",{id:"mls-objects"},"MLS Objects"),(0,i.kt)("p",null,"Following section presents the MLS objects and components that used in this RFC:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Epoch"),": Fixed time intervals that changes the state that is defined by members,\nsection 3.4 in ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MLS proposal message:")," Members MUST receive the proposal message prior to the\ncorresponding commit message that initiates a new epoch with key changes,\nin order to ensure the intended security properties, section 12.1 in ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420"),".\nHere, the add and remove proposals are used."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Application message"),": This message type used in arbitrary encrypted communication between group members.\nThis is restricted by ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420")," as if there is pending proposal,\nthe application message should be cut.\nNote that: Since the MLS is based on servers, this delay between proposal and commit messages are very small.\n",(0,i.kt)("inlineCode",{parentName:"p"},"Commit message:")," After members receive the proposals regarding group changes,\nthe committer, who may be any member of the group, as specified in  ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420"),",\ngenerates the necessary key material for the next epoch, including the appropriate welcome messages\nfor new joiners and new entropy for removed members. In this RFC, the committers only MUST be stewards."),(0,i.kt)("h3",{id:"de-mls-objects"},"de-MLS Objects"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Voting proposal")," Similar to MLS proposals, but processed only if approved through a voting process.\nThey function as application messages in the MLS group,\nallowing the steward to collect them without halting the protocol."),(0,i.kt)("h2",{id:"flow"},"Flow"),(0,i.kt)("p",null,"General flow is as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A steward initializes a group just once, and then sends out Group Announcements (GA) periodically.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Meanwhile, each",(0,i.kt)("inlineCode",{parentName:"p"},"node"),"creates and sends their",(0,i.kt)("inlineCode",{parentName:"p"},"credential")," includes ",(0,i.kt)("inlineCode",{parentName:"p"},"keyPackage"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Each ",(0,i.kt)("inlineCode",{parentName:"p"},"member"),"creates ",(0,i.kt)("inlineCode",{parentName:"p"},"voting proposals")," sends them to from MLS group during epoch E.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Meanwhile, the ",(0,i.kt)("inlineCode",{parentName:"p"},"steward")," collects finalized ",(0,i.kt)("inlineCode",{parentName:"p"},"voting proposals")," from MLS group and converts them into\n",(0,i.kt)("inlineCode",{parentName:"p"},"MLS proposals"),"  then sends them with correspondng ",(0,i.kt)("inlineCode",{parentName:"p"},"commit messages"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Evantually, with the commit messages, all members starts the next epoch E+1."))),(0,i.kt)("h2",{id:"creating-voting-proposal"},"Creating Voting Proposal"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"member")," MAY initializes the voting with the proposal payload\nwhich is implemented using\xa0",(0,i.kt)("a",{parentName:"p",href:"https://protobuf.dev/"},"protocol buffers v3"),"\xa0as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},'\nsyntax = "proto3";\n\nmessage Proposal {\nstring name = 10;                 // Proposal name\nstring payload = 11;              // Describes the what is voting fore \nint32 proposal_id = 12;           // Unique identifier of the proposal\nbytes proposal_owner = 13;        // Public key of the creator\nrepeated Vote votes = 14;         // Vote list in the proposal\nint32 expected_voters_count = 15; // Maximum number of distinct voters\nint32 round = 16;                 // Number of Votes\nint64 timestamp = 17;             // Creation time of proposal\nint64 expiration_time = 18;       // Time interval that the proposal is active\nbool liveness_criteria_yes = 19;  // Shows how managing the silent peers vote\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"message Vote {\nint32 vote_id = 20;             // Unique identifier of the vote\nbytes vote_owner = 21;          // Voter's public key\nint64 timestamp = 22;           // Time when the vote was cast\nbool vote = 23;                 // Vote bool value (true/false)\nbytes parent_hash = 24;         // Hash of previous owner's Vote\nbytes received_hash = 25;       // Hash of previous received Vote\nbytes vote_hash = 26;           // Hash of all previously defined fields in Vote\nbytes signature = 27;           // Signature of vote_hash\n}\n")),(0,i.kt)("p",null,"The voting proposal MAY include adding a ",(0,i.kt)("inlineCode",{parentName:"p"},"node")," or removing a ",(0,i.kt)("inlineCode",{parentName:"p"},"member"),".\nAfter the ",(0,i.kt)("inlineCode",{parentName:"p"},"member")," creates the voting proposal,\nit is emitted to the network via the MLS ",(0,i.kt)("inlineCode",{parentName:"p"},"Application message")," with a lightweight,\nepoch based voting such as ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/vacp2p/rfc-index/blob/consensus-hashgraph-like/vac/raw/consensus-hashgraphlike.md"},"hashgraphlike consensus."),"\nThis consensus result MUST be finalized within the epoch as YES or NO."),(0,i.kt)("p",null,"If the voting result is YES, this points out the voting proposal will be converted into\nthe MLS proposal by the ",(0,i.kt)("inlineCode",{parentName:"p"},"steward")," and following commit message that starts the new epoch."),(0,i.kt)("h2",{id:"creating-welcome-message"},"Creating welcome message"),(0,i.kt)("p",null,"When a MLS ",(0,i.kt)("inlineCode",{parentName:"p"},"MLS proposal message")," is created by the ",(0,i.kt)("inlineCode",{parentName:"p"},"steward"),",\na ",(0,i.kt)("inlineCode",{parentName:"p"},"commit message")," SHOULD follow,\nas in section 12.04 ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420")," to the members.\nIn order for the new ",(0,i.kt)("inlineCode",{parentName:"p"},"member")," joining the group to synchronize with the current members\nwho received the ",(0,i.kt)("inlineCode",{parentName:"p"},"commit message"),",\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"steward")," sends a welcome message to the node as the new ",(0,i.kt)("inlineCode",{parentName:"p"},"member"),",\nas in section 12.4.3.1. ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420"),"."),(0,i.kt)("h2",{id:"single-steward"},"Single steward"),(0,i.kt)("p",null,"To naive way to create a decentralized secure group messaging is having a single transparent ",(0,i.kt)("inlineCode",{parentName:"p"},"steward"),"\nwho only applies the changes regarding the result of the voting."),(0,i.kt)("p",null,"This is mostly similar with the general flow and specified in voting proposal and welcome message creation sections."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Each time a single ",(0,i.kt)("inlineCode",{parentName:"li"},"steward")," initializes a group with group parameters with parameters\nas in section 8.1. Group Context in ",(0,i.kt)("a",{parentName:"li",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"steward")," creates a group anouncement (GA) according to the previous step and\nbroadcast it to the all network periodically. GA message is visible in network to all ",(0,i.kt)("inlineCode",{parentName:"li"},"nodes"),"."),(0,i.kt)("li",{parentName:"ol"},"The each ",(0,i.kt)("inlineCode",{parentName:"li"},"node")," who wants to be a member needs to obtain this anouncement and create ",(0,i.kt)("inlineCode",{parentName:"li"},"credential"),"\nincludes ",(0,i.kt)("inlineCode",{parentName:"li"},"keyPackage")," that is specified in ",(0,i.kt)("a",{parentName:"li",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420")," section 10."),(0,i.kt)("li",{parentName:"ol"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"steward")," aggregates all ",(0,i.kt)("inlineCode",{parentName:"li"},"KeyPackages")," utilizes them to provision group additions for new members,\nbased on the outcome of the voting process."),(0,i.kt)("li",{parentName:"ol"},"Any ",(0,i.kt)("inlineCode",{parentName:"li"},"member")," start to create ",(0,i.kt)("inlineCode",{parentName:"li"},"voting proposals")," for adding or removing users,\nand present them to the voting in the MLS group as an application message.")),(0,i.kt)("p",null,"However, unlimited use of ",(0,i.kt)("inlineCode",{parentName:"p"},"voting proposals")," within the group may be misused by\nmalicious or overly active members.\nTherefore, an application-level constraint can be introduced to limit the number\nor frequency of proposals initiated by each member to prevent spam or abuse.\n6. Meanwhile, the ",(0,i.kt)("inlineCode",{parentName:"p"},"steward")," collects finalized ",(0,i.kt)("inlineCode",{parentName:"p"},"voting proposals")," with in epoch ",(0,i.kt)("inlineCode",{parentName:"p"},"E"),",\nthat have received affirmative votes from members via application messages.\nOtherwise, the ",(0,i.kt)("inlineCode",{parentName:"p"},"steward"),' discards proposals that did not receive a majority of "YES" votes.\nSince voting proposals are transmitted as application messages, omitting them does not affect\nthe protocol\u2019s correctness or consistency.\n7. The ',(0,i.kt)("inlineCode",{parentName:"p"},"steward")," converts all approved ",(0,i.kt)("inlineCode",{parentName:"p"},"voting proposals")," into\ncorresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"MLS proposals")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"commit message"),", and\ntransmits both in a single operation as in ",(0,i.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420")," section 12.4,\nincluding welcome messages for the new members. Therefore, the ",(0,i.kt)("inlineCode",{parentName:"p"},"commit message")," ends the previous epoch and create new ones."),(0,i.kt)("h2",{id:"multi-stewards"},"Multi stewards"),(0,i.kt)("p",null,"Decentralization has already been achieved in the previous section.\nHowever, to improve availability and ensure censorship resistance,\nthe single-steward protocol is extended to a multi-steward architecture.\nIn this design, each epoch is coordinated by a designated steward,\noperating under the same protocol as the single-steward model.\nThus, the multi-steward approach primarily defines how steward roles\nrotate across epochs while preserving the underlying structure and logic of the original protocol.\nTwo variants of the multi-steward design are introduced to address different system requirements."),(0,i.kt)("h3",{id:"multi-steward-with-single-consensus"},"Multi steward with single consensus"),(0,i.kt)("p",null,"In this model, all group modifications, such as adding or removing members,\nmust be approved through consensus by all participants,\nincluding the steward assigned for epoch ",(0,i.kt)("inlineCode",{parentName:"p"},"E"),".\nA configuration with multiple stewards operating under a shared consensus protocol offers\nincreased decentralization and stronger protection against censorship.\nHowever, this benefit comes with reduced operational efficiency.\nThe model is therefore best suited for small groups that value\ndecentralization and censorship resistance more than performance."),(0,i.kt)("h3",{id:"multi-steward-with-two-consensuses"},"Multi steward with two consensuses"),(0,i.kt)("p",null,"The two-consensus model offers improved efficiency with a trade-off in decentralization.\nIn this design, group changes require consensus only among the stewards, rather than all members.\nRegular members participate by periodically selecting the stewards but do not take part in each decision.\nThis structure enables faster coordination since consensus is achieved within a smaller group of stewards.\nIt is particularly suitable for large user groups, where involving every member in each decision would be impractical."),(0,i.kt)("h2",{id:"copyright"},"Copyright"),(0,i.kt)("p",null,"Copyright and related rights waived via ",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0")),(0,i.kt)("h3",{id:"references"},"References"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://datatracker.ietf.org/doc/rfc9420/"},"MLS RFC 9420")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/vacp2p/rfc-index/blob/consensus-hashgraph-like/vac/raw/consensus-hashgraphlike.md"},"Hashgraphlike Consensus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/vacp2p/de-mls"},"vacp2p/de-mls"))))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),h=i,u=m["".concat(l,".").concat(h)]||m[h]||d[h]||r;return n?a.createElement(u,o(o({ref:t},c),{},{components:n})):a.createElement(u,o({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);