"use strict";(self.webpackChunklogos_docs_template=self.webpackChunklogos_docs_template||[]).push([[7378],{27604:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={title:"13/WAKU2-STORE",name:"Waku Store Query",status:"draft",version:1,editor:"Hanno Cornelius &lt;hanno@status.im&gt;",contributors:["Dean Eigenmann &lt;dean@status.im&gt;","Oskar Thor\xe9n &lt;oskarth@titanproxy.com&gt;","Aaryamann Challani &lt;p1ge0nh8er@proton.me&gt;","Sanaz Taheri &lt;sanaz@status.im&gt;"]},s=void 0,o={unversionedId:"standards/core/13/store",id:"standards/core/13/store",title:"13/WAKU2-STORE",description:"- Status: draft",source:"@site/waku/standards/core/13/store.md",sourceDirName:"standards/core/13",slug:"/standards/core/13/store",permalink:"/waku/standards/core/13/store",draft:!1,tags:[],version:"current",frontMatter:{title:"13/WAKU2-STORE",name:"Waku Store Query",status:"draft",version:1,editor:"Hanno Cornelius &lt;hanno@status.im&gt;",contributors:["Dean Eigenmann &lt;dean@status.im&gt;","Oskar Thor\xe9n &lt;oskarth@titanproxy.com&gt;","Aaryamann Challani &lt;p1ge0nh8er@proton.me&gt;","Sanaz Taheri &lt;sanaz@status.im&gt;"]},sidebar:"defaultSidebar",previous:{title:"13/WAKU2-STORE",permalink:"/waku/standards/core/13/previous-versions/00/store"},next:{title:"14/WAKU2-MESSAGE",permalink:"/waku/standards/core/14/message"}},l={},p=[{value:"Abstract",id:"abstract",level:2},{value:"Terminology",id:"terminology",level:3},{value:"Wire Specification",id:"wire-specification",level:2},{value:"Design Requirements",id:"design-requirements",level:3},{value:"Payloads",id:"payloads",level:3},{value:"General Store Query Concepts",id:"general-store-query-concepts",level:3},{value:"Waku Message Key-Value Pairs",id:"waku-message-key-value-pairs",level:4},{value:"Waku Message Store Eligibility",id:"waku-message-store-eligibility",level:4},{value:"Waku message sorting",id:"waku-message-sorting",level:4},{value:"Pagination",id:"pagination",level:4},{value:"Store Query Request",id:"store-query-request",level:3},{value:"Content filtered queries",id:"content-filtered-queries",level:4},{value:"Message hash lookup queries",id:"message-hash-lookup-queries",level:4},{value:"Presence queries",id:"presence-queries",level:4},{value:"Pagination info",id:"pagination-info",level:4},{value:"Store Query Response",id:"store-query-response",level:3},{value:"Filter matching",id:"filter-matching",level:4},{value:"Populating response messages",id:"populating-response-messages",level:4},{value:"Paginating the response",id:"paginating-the-response",level:4},{value:"Security Consideration",id:"security-consideration",level:3},{value:"Adversarial Model",id:"adversarial-model",level:4},{value:"Future Work",id:"future-work",level:3},{value:"Copyright",id:"copyright",level:2},{value:"References",id:"references",level:2}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Status: draft"),(0,i.kt)("li",{parentName:"ul"},"Editor: Hanno Cornelius ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:hanno@status.im"},"hanno@status.im"),">"),(0,i.kt)("li",{parentName:"ul"},"Contributors:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Dean Eigenmann ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:dean@status.im"},"dean@status.im"),">"),(0,i.kt)("li",{parentName:"ul"},"Oskar Thor\xe9n ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:oskarth@titanproxy.com"},"oskarth@titanproxy.com"),">"),(0,i.kt)("li",{parentName:"ul"},"Aaryamann Challani ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:p1ge0nh8er@proton.me"},"p1ge0nh8er@proton.me"),">"),(0,i.kt)("li",{parentName:"ul"},"Sanaz Taheri ","<",(0,i.kt)("a",{parentName:"li",href:"mailto:sanaz@status.im"},"sanaz@status.im"),">")))),(0,i.kt)("p",null,"Previous version: ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/13/previous-versions/00/store"},"00")),(0,i.kt)("h2",{id:"abstract"},"Abstract"),(0,i.kt)("p",null,"This specification explains the ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," protocol,\nwhich enables querying of ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE"),"s."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Protocol identifier*"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"/vac/waku/store-query/3.0.0")),(0,i.kt)("h3",{id:"terminology"},"Terminology"),(0,i.kt)("p",null,"The term PII, Personally Identifiable Information,\nrefers to any piece of data that can be used to uniquely identify a user.\nFor example, the signature verification key, and\nthe hash of one's static IP address are unique for each user and hence count as PII."),(0,i.kt)("h2",{id:"wire-specification"},"Wire Specification"),(0,i.kt)("p",null,"The key words \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d,\n\u201cSHOULD\u201d, \u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cMAY\u201d, and\n\u201cOPTIONAL\u201d in this document are to be interpreted as described in ",(0,i.kt)("a",{parentName:"p",href:"https://www.ietf.org/rfc/rfc2119.txt"},"RFC2119"),"."),(0,i.kt)("h3",{id:"design-requirements"},"Design Requirements"),(0,i.kt)("p",null,"The concept of ",(0,i.kt)("inlineCode",{parentName:"p"},"ephemeral")," messages introduced in ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE")," affects ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," as well.\nNodes running ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," SHOULD support ",(0,i.kt)("inlineCode",{parentName:"p"},"ephemeral")," messages as specified in ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE"),".\nNodes running ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," SHOULD NOT store messages with the ",(0,i.kt)("inlineCode",{parentName:"p"},"ephemeral")," flag set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("h3",{id:"payloads"},"Payloads"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-protobuf"},'syntax = "proto3";\n\n// Protocol identifier: /vac/waku/store-query/3.0.0\npackage waku.store.v3;\n\nimport "waku/message/v1/message.proto";\n\nmessage WakuMessageKeyValue {\n  optional bytes message_hash = 1; // Globally unique key for a Waku Message\n\n  // Full message content and associated pubsub_topic as value\n  optional waku.message.v1.WakuMessage message = 2;\n  optional string pubsub_topic = 3;\n}\n\nmessage StoreQueryRequest {\n  string request_id = 1;\n  bool include_data = 2; // Response should include full message content\n  \n  // Filter criteria for content-filtered queries\n  optional string pubsub_topic = 10;\n  repeated string content_topics = 11;\n  optional sint64 time_start = 12;\n  optional sint64 time_end = 13;\n\n  // List of key criteria for lookup queries\n  repeated bytes message_hashes = 20; // Message hashes (keys) to lookup\n  \n  // Pagination info. 50 Reserved\n  optional bytes pagination_cursor = 51; // Message hash (key) from where to start query (exclusive)\n  bool pagination_forward = 52;\n  optional uint64 pagination_limit = 53;\n}\n\nmessage StoreQueryResponse {\n  string request_id = 1;\n\n  optional uint32 status_code = 10;\n  optional string status_desc = 11;\n\n  repeated WakuMessageKeyValue messages = 20;\n\n  optional bytes pagination_cursor = 51;\n}\n')),(0,i.kt)("h3",{id:"general-store-query-concepts"},"General Store Query Concepts"),(0,i.kt)("h4",{id:"waku-message-key-value-pairs"},"Waku Message Key-Value Pairs"),(0,i.kt)("p",null,"The store query protocol operates as a query protocol for a key-value store of historical messages,\nwith each entry having a ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE"),"\nand associated ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic")," as the value,\nand ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message##deterministic-message-hashing"},"deterministic message hash")," as the key.\nThe store can be queried to return either a set of keys or a set of key-value pairs."),(0,i.kt)("p",null,"Within the store query protocol,\nthe ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE")," keys and\nvalues MUST be represented in a ",(0,i.kt)("inlineCode",{parentName:"p"},"WakuMessageKeyValue")," message.\nThis message MUST contain the deterministic ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hash")," as the key.\nIt MAY contain the full ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE")," and\nassociated pubsub topic as the value in the ",(0,i.kt)("inlineCode",{parentName:"p"},"message")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic")," fields, depending on the use case as set out below."),(0,i.kt)("p",null,"If the message contains a value entry in addition to the key,\nboth the ",(0,i.kt)("inlineCode",{parentName:"p"},"message")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic")," fields MUST be populated.\nThe message MUST NOT have either ",(0,i.kt)("inlineCode",{parentName:"p"},"message")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic")," populated with the other unset.\nBoth fields MUST either be set or unset."),(0,i.kt)("h4",{id:"waku-message-store-eligibility"},"Waku Message Store Eligibility"),(0,i.kt)("p",null,"In order for a message to be eligible for storage:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"it MUST be a ",(0,i.kt)("em",{parentName:"li"},"valid")," ",(0,i.kt)("a",{parentName:"li",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE"),"."),(0,i.kt)("li",{parentName:"ul"},"the ",(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," field MUST be populated with the Unix epoch time,\nat which the message was generated in nanoseconds.\nIf at the time of storage the ",(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," deviates by more than 20 seconds\neither into the past or the future when compared to the store node\u2019s internal clock,\nthe store node MAY reject the message."),(0,i.kt)("li",{parentName:"ul"},"the ",(0,i.kt)("inlineCode",{parentName:"li"},"ephemeral")," field MUST be set to ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),".")),(0,i.kt)("h4",{id:"waku-message-sorting"},"Waku message sorting"),(0,i.kt)("p",null,"The key-value entries in the store MUST be time-sorted by the ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE")," ",(0,i.kt)("inlineCode",{parentName:"p"},"timestamp")," attribute.\nWhere two or more key-value entries have identical ",(0,i.kt)("inlineCode",{parentName:"p"},"timestamp")," values,\nthe entries MUST be further sorted by the natural order of their message hash keys.\nWithin the context of traversing over key-value entries in the store,\n",(0,i.kt)("em",{parentName:"p"},'"forward"')," indicates traversing the entries in ascending order,\nwhereas ",(0,i.kt)("em",{parentName:"p"},'"backward"')," indicates traversing the entries in descending order."),(0,i.kt)("h4",{id:"pagination"},"Pagination"),(0,i.kt)("p",null,"If a large number of entries in the store service node match the query criteria provided in a ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest"),",\nthe client MAY make use of pagination\nin a chain of store query request and response transactions\nto retrieve the full response in smaller batches termed ",(0,i.kt)("em",{parentName:"p"},'"pages"'),".\nPagination can be performed either in ",(0,i.kt)("a",{parentName:"p",href:"#waku-message-sorting"},"a ",(0,i.kt)("em",{parentName:"a"},"forward")," or ",(0,i.kt)("em",{parentName:"a"},"backward")," direction"),"."),(0,i.kt)("p",null,"A store query client MAY indicate the maximum number of matching entries it wants in the ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse"),",\nby setting the page size limit in the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_limit")," field.\nNote that a store service node MAY enforce its own limit\nif the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_limit")," is unset\nor larger than the service node's internal page size limit."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse")," with a populated ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor")," indicates that more stored entries match the query than included in the response."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse")," without a populated ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor")," indicates that\nthere are no more matching entries in the store."),(0,i.kt)("p",null,"The client MAY request the next page of entries from the store service node\nby populating a subsequent ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest")," with the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor"),"\nreceived in the ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse"),".\nAll other fields and query criteria MUST be the same as in the preceding ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest"),"."),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest")," without a populated ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor"),' indicates that\nthe client wants to retrieve the "first page" of the stored entries matching the query.'),(0,i.kt)("h3",{id:"store-query-request"},"Store Query Request"),(0,i.kt)("p",null,"A client node MUST send all historical message queries within a ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest")," message.\nThis request MUST contain a ",(0,i.kt)("inlineCode",{parentName:"p"},"request_id"),".\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"request_id")," MUST be a uniquely generated string."),(0,i.kt)("p",null,"If the store query client requires the store service node to include ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE")," values in the query response,\nit MUST set ",(0,i.kt)("inlineCode",{parentName:"p"},"include_data")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".\nIf the store query client requires the store service node to return only message hash keys in the query response,\nit SHOULD set ",(0,i.kt)("inlineCode",{parentName:"p"},"include_data")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".\nBy default, therefore, the store service node assumes ",(0,i.kt)("inlineCode",{parentName:"p"},"include_data")," to be ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("p",null,"A store query client MAY include query filter criteria in the ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest"),".\nThere are two types of filter use cases:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Content filtered queries and"),(0,i.kt)("li",{parentName:"ol"},"Message hash lookup queries")),(0,i.kt)("h4",{id:"content-filtered-queries"},"Content filtered queries"),(0,i.kt)("p",null,"A store query client MAY request the store service node to filter historical entries by a content filter.\nSuch a client MAY create a filter on content topic, on time range or on both."),(0,i.kt)("p",null,"To filter on content topic,\nthe client MUST populate ",(0,i.kt)("em",{parentName:"p"},"both")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic")," ",(0,i.kt)("em",{parentName:"p"},"and")," ",(0,i.kt)("inlineCode",{parentName:"p"},"content_topics")," field.\nThe client MUST NOT populate either ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"content_topics")," and leave the other unset.\nBoth fields MUST either be set or unset.\nA mixed content topic filter with just one of either ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"content_topics")," set, SHOULD be regarded as an invalid request."),(0,i.kt)("p",null,"To filter on time range, the client MUST set ",(0,i.kt)("inlineCode",{parentName:"p"},"time_start"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"time_end")," or both.\nEach ",(0,i.kt)("inlineCode",{parentName:"p"},"time_")," field should contain a Unix epoch timestamp in nanoseconds.\nAn unset ",(0,i.kt)("inlineCode",{parentName:"p"},"time_start"),' SHOULD be interpreted as "from the oldest stored entry".\nAn unset ',(0,i.kt)("inlineCode",{parentName:"p"},"time_end"),' SHOULD be interpreted as "up to the youngest stored entry".'),(0,i.kt)("p",null,"If any of the content filter fields are set,\nnamely ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"content_topic"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"time_start"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"time_end"),",\nthe client MUST NOT set the ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hashes")," field."),(0,i.kt)("h4",{id:"message-hash-lookup-queries"},"Message hash lookup queries"),(0,i.kt)("p",null,'A store query client MAY request the store service node to filter historical entries by one or\nmore matching message hash keys.\nThis type of query acts as a "lookup" against a message hash key or\nset of keys already known to the client.'),(0,i.kt)("p",null,"In order to perform a lookup query,\nthe store query client MUST populate the ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hashes")," field with the list of message hash keys it wants to lookup in the store service node."),(0,i.kt)("p",null,"If the ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hashes")," field is set,\nthe client MUST NOT set any of the content filter fields,\nnamely ",(0,i.kt)("inlineCode",{parentName:"p"},"pubsub_topic"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"content_topic"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"time_start"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"time_end"),"."),(0,i.kt)("h4",{id:"presence-queries"},"Presence queries"),(0,i.kt)("p",null,"A presence query is a special type of lookup query that allows a client to check for the presence of one or\nmore messages in the store service node,\nwithout retrieving the full contents (values) of the messages.\nThis can, for example, be used as part of a reliability mechanism,\nwhereby store query clients verify that previously published messages have been successfully stored."),(0,i.kt)("p",null,"In order to perform a presence query,\nthe store query client MUST populate the ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hashes")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest")," with the list of message hashes\nfor which it wants to verify presence in the store service node.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"include_data")," property MUST be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".\nThe client SHOULD interpret every ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hash")," returned in the ",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," field of the ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse")," as present in the store.\nThe client SHOULD assume that all other message hashes included in the original ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest")," but\nnot in the ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse")," is not present in the store."),(0,i.kt)("h4",{id:"pagination-info"},"Pagination info"),(0,i.kt)("p",null,"The store query client MAY include a message hash as ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor"),",\nto indicate at which key-value entry a store service node SHOULD start the query.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor")," is treated as exclusive\nand the corresponding entry will not be included in subsequent store query responses."),(0,i.kt)("p",null,"For forward queries,\nonly messages following (see ",(0,i.kt)("a",{parentName:"p",href:"#waku-message-sorting"},"sorting"),") the one indexed at ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor"),"\nwill be returned.\nFor backward queries,\nonly messages preceding (see ",(0,i.kt)("a",{parentName:"p",href:"#waku-message-sorting"},"sorting"),") the one indexed at ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_cursor"),"\nwill be returned."),(0,i.kt)("p",null,"If the store query client requires the store service node to perform a forward query,\nit MUST set ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_forward")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".\nIf the store query client requires the store service node to perform a backward query,\nit SHOULD set ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_forward")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".\nBy default, therefore, the store service node assumes pagination to be backward."),(0,i.kt)("p",null,"A store query client MAY indicate the maximum number of matching entries it wants in the ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse"),",\nby setting the page size limit in the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_limit")," field.\nNote that a store service node MAY enforce its own limit\nif the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_limit")," is unset\nor larger than the service node's internal page size limit."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"#pagination"},"pagination")," for more on how the pagination info is used in store transactions."),(0,i.kt)("h3",{id:"store-query-response"},"Store Query Response"),(0,i.kt)("p",null,"In response to any ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest"),",\na store service node SHOULD respond with a ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryResponse")," with a ",(0,i.kt)("inlineCode",{parentName:"p"},"requestId")," matching that of the request.\nThis response MUST contain a ",(0,i.kt)("inlineCode",{parentName:"p"},"status_code")," indicating if the request was successful or not.\nSuccessful status codes are in the ",(0,i.kt)("inlineCode",{parentName:"p"},"2xx")," range.\nA client node SHOULD consider all other status codes as error codes and\nassume that the requested operation had failed.\nIn addition,\nthe store service node MAY choose to provide a more detailed status description in the ",(0,i.kt)("inlineCode",{parentName:"p"},"status_desc")," field."),(0,i.kt)("h4",{id:"filter-matching"},"Filter matching"),(0,i.kt)("p",null,"For ",(0,i.kt)("a",{parentName:"p",href:"#content-filtered-queries"},"content filtered queries"),",\nan entry in the store service node matches the filter criteria in a ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest")," if each of the following conditions are met:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"its ",(0,i.kt)("inlineCode",{parentName:"li"},"content_topic")," is in the request ",(0,i.kt)("inlineCode",{parentName:"li"},"content_topics")," set\nand it was published on a matching ",(0,i.kt)("inlineCode",{parentName:"li"},"pubsub_topic")," OR the request ",(0,i.kt)("inlineCode",{parentName:"li"},"content_topics")," and\n",(0,i.kt)("inlineCode",{parentName:"li"},"pubsub_topic")," fields are unset"),(0,i.kt)("li",{parentName:"ul"},"its ",(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," is ",(0,i.kt)("em",{parentName:"li"},"larger or equal")," than the request ",(0,i.kt)("inlineCode",{parentName:"li"},"start_time")," OR the request ",(0,i.kt)("inlineCode",{parentName:"li"},"start_time")," is unset"),(0,i.kt)("li",{parentName:"ul"},"its ",(0,i.kt)("inlineCode",{parentName:"li"},"timestamp")," is ",(0,i.kt)("em",{parentName:"li"},"smaller")," than the request ",(0,i.kt)("inlineCode",{parentName:"li"},"end_time")," OR the request ",(0,i.kt)("inlineCode",{parentName:"li"},"end_time")," is unset")),(0,i.kt)("p",null,"Note that for content filtered queries, ",(0,i.kt)("inlineCode",{parentName:"p"},"start_time")," is treated as ",(0,i.kt)("em",{parentName:"p"},"inclusive")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"end_time")," is treated as ",(0,i.kt)("em",{parentName:"p"},"exclusive"),"."),(0,i.kt)("p",null,"For ",(0,i.kt)("a",{parentName:"p",href:"#message-hash-lookup-queries"},"message hash lookup queries"),",\nan entry in the store service node matches the filter criteria if its ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hash")," is in the request ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hashes")," set."),(0,i.kt)("p",null,"The store service node SHOULD respond with an error code and\ndiscard the request if the store query request contains both content filter criteria\nand message hashes."),(0,i.kt)("h4",{id:"populating-response-messages"},"Populating response messages"),(0,i.kt)("p",null,"The store service node SHOULD populate the ",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," field in the response\nonly with entries matching the filter criteria provided in the corresponding request.\nRegardless of whether the response is to a ",(0,i.kt)("em",{parentName:"p"},"forward")," or ",(0,i.kt)("em",{parentName:"p"},"backward")," query,\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," field in the response MUST be ordered in a forward direction\naccording to the ",(0,i.kt)("a",{parentName:"p",href:"#waku-message-sorting"},"message sorting rules"),"."),(0,i.kt)("p",null,"If the corresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest")," has ",(0,i.kt)("inlineCode",{parentName:"p"},"include_data")," set to true,\nthe service node SHOULD populate both the ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hash")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"message")," for each entry in the response.\nIn all other cases,\nthe store service node SHOULD populate only the ",(0,i.kt)("inlineCode",{parentName:"p"},"message_hash")," field for each entry in the response."),(0,i.kt)("h4",{id:"paginating-the-response"},"Paginating the response"),(0,i.kt)("p",null,"The response SHOULD NOT contain more ",(0,i.kt)("inlineCode",{parentName:"p"},"messages")," than the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_limit")," provided in the corresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest"),".\nIt is RECOMMENDED that the store node defines its own maximum page size internally.\nIf the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_limit")," in the request is unset,\nor exceeds this internal maximum page size,\nthe store service node SHOULD ignore the ",(0,i.kt)("inlineCode",{parentName:"p"},"pagination_limit")," field and\napply its own internal maximum page size."),(0,i.kt)("p",null,"In response to a ",(0,i.kt)("em",{parentName:"p"},"forward")," ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," is set,\nthe store service node SHOULD populate the ",(0,i.kt)("inlineCode",{parentName:"li"},"messages")," field\nwith matching entries following the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," (exclusive)."),(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," is unset,\nthe store service node SHOULD populate the ",(0,i.kt)("inlineCode",{parentName:"li"},"messages")," field\nwith matching entries from the first entry in the store."),(0,i.kt)("li",{parentName:"ul"},"if there are still more matching entries in the store\nafter the maximum page size is reached while populating the response,\nthe store service node SHOULD populate the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," in the ",(0,i.kt)("inlineCode",{parentName:"li"},"StoreQueryResponse"),"\nwith the message hash key of the ",(0,i.kt)("em",{parentName:"li"},"last")," entry ",(0,i.kt)("em",{parentName:"li"},"included")," in the response.")),(0,i.kt)("p",null,"In response to a ",(0,i.kt)("em",{parentName:"p"},"backward")," ",(0,i.kt)("inlineCode",{parentName:"p"},"StoreQueryRequest"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," is set,\nthe store service node SHOULD populate the ",(0,i.kt)("inlineCode",{parentName:"li"},"messages")," field\nwith matching entries preceding the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," (exclusive)."),(0,i.kt)("li",{parentName:"ul"},"if the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," is unset,\nthe store service node SHOULD populate the ",(0,i.kt)("inlineCode",{parentName:"li"},"messages")," field\nwith matching entries from the last entry in the store."),(0,i.kt)("li",{parentName:"ul"},"if there are still more matching entries in the store\nafter the maximum page size is reached while populating the response,\nthe store service node SHOULD populate the ",(0,i.kt)("inlineCode",{parentName:"li"},"pagination_cursor")," in the ",(0,i.kt)("inlineCode",{parentName:"li"},"StoreQueryResponse"),"\nwith the message hash key of the ",(0,i.kt)("em",{parentName:"li"},"first")," entry ",(0,i.kt)("em",{parentName:"li"},"included")," in the response.")),(0,i.kt)("h3",{id:"security-consideration"},"Security Consideration"),(0,i.kt)("p",null,"The main security consideration while using this protocol is that a querying node has to reveal its content filters of interest to the queried node,\nhence potentially compromising their privacy."),(0,i.kt)("h4",{id:"adversarial-model"},"Adversarial Model"),(0,i.kt)("p",null,"Any peer running the ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," protocol, i.e.\nboth the querying node and the queried node, are considered as an adversary.\nFurthermore,\nwe currently consider the adversary as a passive entity that attempts to collect information from other peers to conduct an attack but\nit does so without violating protocol definitions and instructions.\nAs we evolve the protocol,\nfurther adversarial models will be considered.\nFor example, under the passive adversarial model,\nno malicious node hides or\nlies about the history of messages as it is against the description of the ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," protocol."),(0,i.kt)("p",null,"The following are not considered as part of the adversarial model:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An adversary with a global view of all the peers and their connections."),(0,i.kt)("li",{parentName:"ul"},"An adversary that can eavesdrop on communication links between arbitrary pairs of peers (unless the adversary is one end of the communication).\nSpecifically, the communication channels are assumed to be secure.")),(0,i.kt)("h3",{id:"future-work"},"Future Work"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Anonymous query"),": This feature guarantees that nodes can anonymously query historical messages from other nodes i.e.,\nwithout disclosing the exact topics of ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE")," they are interested in.",(0,i.kt)("br",{parentName:"p"}),"\n","As such, no adversary in the ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," protocol would be able to learn which peer is interested in which content filters i.e.,\ncontent topics of ",(0,i.kt)("a",{parentName:"p",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE"),".\nThe current version of the ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," protocol does not provide anonymity for historical queries,\nas the querying node needs to directly connect to another node in the ",(0,i.kt)("inlineCode",{parentName:"p"},"WAKU2-STORE")," protocol and\nexplicitly disclose the content filters of its interest to retrieve the corresponding messages.\nHowever, one can consider preserving anonymity through one of the following ways:")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"By hiding the source of the request i.e., anonymous communication.\nThat is the querying node shall hide all its PII in its history request e.g.,\nits IP address.\nThis can happen by the utilization of a proxy server or by using Tor.\nNote that the current structure of historical requests does not embody any piece of PII, otherwise,\nsuch data fields must be treated carefully to achieve query anonymity."))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"By deploying secure 2-party computations\nin which the querying node obtains the historical messages of a certain topic,\nthe queried node learns nothing about the query.\nExamples of such 2PC protocols are secure one-way Private Set Intersections (PSI).")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Robust and verifiable timestamps"),": Messages timestamp is a way to show that\nthe message existed prior to some point in time.\nHowever, the lack of timestamp verifiability can create room for a range of attacks,\nincluding injecting messages with invalid timestamps pointing to the far future.\nTo better understand the attack,\nconsider a store node whose current clock shows ",(0,i.kt)("inlineCode",{parentName:"li"},"2021-01-01 00:00:30"),"\n(and assume all the other nodes have a synchronized clocks +-20seconds).\nThe store node already has a list of messages,\n",(0,i.kt)("inlineCode",{parentName:"li"},"(m1,2021-01-01 00:00:00), (m2,2021-01-01 00:00:01), ..., (m10:2021-01-01 00:00:20)"),",\nthat are sorted based on their timestamp.",(0,i.kt)("br",{parentName:"li"}),"An attacker sends a message with an arbitrary large timestamp e.g.,\n10 hours ahead of the correct clock ",(0,i.kt)("inlineCode",{parentName:"li"},"(m',2021-01-01 10:00:30)"),".\nThe store node places ",(0,i.kt)("inlineCode",{parentName:"li"},"m'")," at the end of the list,\n",(0,i.kt)("inlineCode",{parentName:"li"},"(m1,2021-01-01 00:00:00), (m2,2021-01-01 00:00:01), ..., (m10:2021-01-01 00:00:20),\n(m',2021-01-01 10:00:30)"),".\nNow another message arrives with a valid timestamp e.g.,\n",(0,i.kt)("inlineCode",{parentName:"li"},"(m11, 2021-01-01 00:00:45)"),".\nHowever, since its timestamp precedes the malicious message ",(0,i.kt)("inlineCode",{parentName:"li"},"m'"),",\nit gets placed before ",(0,i.kt)("inlineCode",{parentName:"li"},"m'")," in the list i.e.,\n",(0,i.kt)("inlineCode",{parentName:"li"},"(m1,2021-01-01 00:00:00), (m2,2021-01-01 00:00:01), ..., (m10:2021-01-01 00:00:20),\n(m11, 2021-01-01 00:00:45), (m',2021-01-01 10:00:30)"),".\nIn fact, for the next 10 hours,\n",(0,i.kt)("inlineCode",{parentName:"li"},"m'")," will always be considered as the most recent message and\nserved as the last message to the querying nodes irrespective of how many other\nmessages arrive afterward.")),(0,i.kt)("p",null,"A robust and verifiable timestamp allows the receiver of a message to verify that\na message has been generated prior to the claimed timestamp.\nOne solution is the use of ",(0,i.kt)("a",{parentName:"p",href:"https://opentimestamps.org/"},"open timestamps")," e.g.,\nblock height in Blockchain-based timestamps.\nThat is, messages contain the most recent block height perceived by their senders\nat the time of message generation.\nThis proves accuracy within a range of minutes (e.g., in Bitcoin blockchain) or\nseconds (e.g., in Ethereum 2.0) from the time of origination."),(0,i.kt)("h2",{id:"copyright"},"Copyright"),(0,i.kt)("p",null,"Copyright and related rights waived via\n",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC0"),"."),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/waku/standards/core/14/message"},"14/WAKU2-MESSAGE")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://developers.google.com/protocol-buffers/"},"protocol buffers v3")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://opentimestamps.org/"},"Open timestamps"))))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),h=i,c=m["".concat(l,".").concat(h)]||m[h]||d[h]||r;return n?a.createElement(c,s(s({ref:t},u),{},{components:n})):a.createElement(c,s({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);